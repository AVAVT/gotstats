{"version":3,"sources":["Shared/utils.js","WebApp/Header/Header.jsx","WebApp/Welcome.jsx","Shared/constants.js","Redux/Charts/chartActions.js","Redux/promiseUtils.js","Redux/Games/gameActions.js","Redux/Player/playerActions.js","WebApp/SideBar/SearchBox.jsx","WebApp/SideBar/QuickLinks.jsx","Shared/Components/LoadingIcon/LoadingIcon.jsx","WebApp/SideBar/SideBar.jsx","WebApp/LoadingUser/LoadingUser.js","WebApp/Charts/WinLoseChart.js","WebApp/Charts/ResultDistributionChart.js","WebApp/Charts/BoardSizesChart.js","WebApp/Charts/TimeSettingsChart.js","Shared/Components/ExtLink.jsx","Shared/Components/PlayerLink.jsx","Shared/Components/GameLink.jsx","WebApp/Charts/OpponentChart.js","WebApp/Charts/MiscChart.js","WebApp/GameFilters/ChartFilter.jsx","WebApp/Charts/GameHistoryChart.jsx","WebApp/Charts/ChartList.js","WebApp/Footer/Footer.jsx","WebApp/Statistics.jsx","App.jsx","serviceWorker.js","Redux/Player/playerReducer.js","Redux/Games/gameReducer.js","Redux/Charts/chartDataReducer.js","OGSApi/OGSApi.js","Redux/APIReducer.js","Redux/reducers.js","index.js","Redux/store.js"],"names":["rankNumberToKyuDan","rank","getPlayerRank","player","rating","ratings","overall","Math","floor","ratingToRank","err","ranking","getPlayerRating","getPlayerRankDisplay","log","ratingToKyuDan","isPlayerWin","game","playerId","players","black","id","white_lost","white","black_lost","extractPlayerAndOpponent","opponent","extractHistoricalPlayerAndOpponent","historicalPlayer","historical_ratings","historicalOpponent","daysDifferenceBetween","day1","day2","two","Date","getFullYear","getMonth","getDate","one","days","getTime","ceil","Header","pageTitle","this","props","username","title","className","Helmet","href","process","src","alt","Component","connect","Welcome","minDate","maxDate","rankedValues","Ranked","Unranked","values","tournamentValues","Tournament","NonTournament","boardSizeValues","Nineteens","Thirteens","Nines","Others","timeSettingsValues","Blitz","Live","Correspondence","resultTypeValues","Scoring","Resignation","Timeout","colorValues","Black","White","handicapValues","Even","Taker","Giver","applyGameFilters","filters","dispatch","getState","dateOfLastGame","games","end","chartsData","startDate","endDate","ranked","tournament","boardSize","timeSettings","resultType","handicap","color","limitEndDate","latestLimitEndDate","hasOwnProperty","latestEndDate","newEndDate","filterFunctionParams","filterFunction","composeFilterFunction","updateChartDataSource","results","filter","index","date","ended","gameSatisfyRankedRule","gameSatisfyTournamentRule","gameSatisfyBoardSizeRule","gameSatisfyTimeSettingsRule","gameSatisfyHandicapRule","gameSatisfyColorRule","gameSatisfyResultTypeRule","includes","isTournamentGame","gameSize","width","height","getGameBoardSize","gameTimeSettings","time_per_move","getGameTimeSettings","gameHandicapState","getGameHandicapState","outcome","isNaN","split","newData","type","payload","REQUEST","SUCCESS","FAILURE","PROGRESS","FETCH_GAMES","fetchGames","cachedGames","a","reduxState","fetchingPromise","fetching","cancel","latestId","length","OGSApi","fetchingPage","fetchingTotalPage","shouldContinueFetching","promise","fetchGamePage","data","next","undefined","fetchGamesStart","fetchGamesProgress","push","count","fetchGamesSuccess","dispatchStateFrom","console","error","fetchGamesFailure","setHours","start","fetchPlayer","userIdPromise","fetchUserId","fetchPlayerStart","userId","userDataPromise","fetchUserDataById","userData","fetchPlayerSuccess","parseInt","registrationDate","registration_date","fetchPlayerFailure","SearchBox","state","updateSearchUser","event","setState","target","value","submit","preventDefault","history","getPlayerData","document","activeElement","blur","downloadJSON","jsonString","JSON","stringify","exporterVersion","blob","Blob","saveAs","window","alert","readFile","file","files","reader","FileReader","onload","evt","readImportedJSON","result","readAsText","parse","importPlayerData","onSubmit","onChange","name","placeholder","style","display","onClick","getElementById","click","withRouter","importPlayer","links","QuickLinks","onLinkClicked","link","scrollToElem","renderLink","linkData","key","e","items","map","currentClassName","LoadingIcon","circumference","PI","outerRadius","viewBox","transform","version","xmlns","xmlnsXlink","shapeRendering","r","cx","radius","cy","fill","strokeWidth","stroke","strokeDasharray","SideBar","errorMessage","currentPage","totalPages","showQuickLinks","freezeQuery","quickLinks","searchBoxOrLoadProgress","marginRight","flex","rel","mapDispatchToProps","fetchError","LoadingUser","isFetchingPlayer","WinLoseChart","mainChartOptions","backgroundColor","chartArea","top","colors","pieSliceTextStyle","legend","position","textStyle","fontName","fontSize","animation","startup","easing","duration","subChartOptions","maxLines","computeWinLoseStatistics","blackGames","whiteGames","blackLosses","whiteLosses","statistics","chartData1","chartData2","chartData3","chartData4","chartType","options","footer","ResultDistributionChart","pieChartOptions","left","right","columnChartOptions","isStacked","hAxis","vAxis","assignGameResultToDistributions","distributions","isWin","points","parseFloat","pointDiff","computeWinLoseDistributions","reduce","generateChartData","BoardSizesChart","alignment","computeBoardSizes","nineteenGames","thirteenGames","nineGames","otherGames","nineteenLosses","thirteenLosses","nineLosses","otherLosses","forEach","chartData5","TimeSettingsChart","computeTimeSettings","blitzGames","liveGames","correspondenceGames","blitzLosses","liveLosses","correspondenceLosses","times","ExtLink","children","PlayerLink","OGS_ROOT","img","OGS_API_ROOT","GameLink","related","detail","moment","format","OpponentChart","computeOpponentsInfo","numberOfOpponents","opponents","weakestOpp","strongestOpp","mostPlayed","strongestDefeated","ratingDiff","opponentRank","win","loss","opponentsSortedByGames","Object","sort","b","mostPlayerOpp","recurringOpponents","o","keys","averageGamePerOpponent","toFixed","opponentsInfo","weakestBarRate","max","strongestBarRate","min","userBarRate","weakestDisp","configs","userDisp","strongestDisp","mostPlayedDisp","strongestDefeatedDisp","data-toggle","data-placement","opp","background","MiscChart","computeMiscInfo","analyzingGames","mostActiveDay","currentDay","totalLosses","longestStreak","streak","currentStreak","gamesOnMostActiveDay","gamesOnCurrentDay","biggestWin","diff","longestGame","scoreDiff","gameDay","started","gameDuration","asMilliseconds","memberSince","firstGameDate","gamesPerDay","dateOfFirstGame","daysSinceStart","uniqueTournaments","indexOf","streakDurationDisplay","biggestWinDisplay","preciseDiff","ChartFilter","expanded","onCheckboxChanged","Array","from","querySelectorAll","input","checked","onFilterChanged","onToggleChanged","onDateChanged","dates","changes","filterGames","renderCheckBoxItems","validValues","subDivideCols","renderCheckbox","defaultChecked","htmlFor","Button","Collapse","isOpen","dateFormat","enableTime","enableSeconds","PureComponent","GameHistoryChart","scatterPlotChartOptions","series","pointShape","rotation","gridlines","tooltip","isHtml","trigger","computeGameHistory","insertCurrentRank","historicalWinloss","playerRating","isBlack","opponentRating","gameId","renderChartTooltip","round","chartData","label","role","p","html","item","ChartList","filteredGamesData","allGamesData","Footer","Statistics","scrollIntoView","user","showStatistics","showLoading","App","reduxStore","store","path","component","match","params","exact","Boolean","location","hostname","initialState","reducer","CancelablePromise","resolve","reject","axios","get","then","res","catch","status","url","combineReducers","APIReducer","playerReducer","gamesReducer","chartReducers","createStore","reducers","composeWithReduxDevTools","applyMiddleware","reduxThunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gVAAMA,EAAqB,SAACC,GAC1B,OAAIA,EAAO,GAAW,GAAKA,EAAO,IACtBA,EAAO,GAAK,KAGbC,EAAgB,SAACC,GAC5B,IACE,IAAMC,EAASD,EAAOE,QAAQC,QAAQF,OAEtC,OADWG,KAAKC,MAAMC,EAAaL,IAEnC,MAAOM,GACP,OAAOP,EAAOQ,UAcLC,EAAkB,SAACT,GAAD,OAAYA,EAAOE,QAAQC,QAAQF,QAErDS,EAAuB,SAACV,GACnC,OAAOH,EAAmBE,EAAcC,KAG7BM,EAAe,SAACL,GAAD,OAAqC,MAAzBG,KAAKO,IAAIV,EAAS,MAE7CW,EAAiB,SAACX,GAC7B,IAAIH,EAAOM,KAAKC,MAAMC,EAAaL,IACnC,OAAOJ,EAAmBC,IAsBfe,EAAc,SAACC,EAAMC,GAChC,OACGD,EAAKE,QAAQC,MAAMC,KAAOH,GAAYD,EAAKK,YAC3CL,EAAKE,QAAQI,MAAMF,KAAOH,GAAYD,EAAKO,YAInCC,EAA2B,SAACR,EAAMC,GAC7C,OAAOD,EAAKE,QAAQC,MAAMC,KAAOH,EAC7B,CACEf,OAAQc,EAAKE,QAAQC,MACrBM,SAAUT,EAAKE,QAAQI,OAEzB,CACEpB,OAAQc,EAAKE,QAAQI,MACrBG,SAAUT,EAAKE,QAAQC,QAIlBO,EAAqC,SAACV,EAAMC,GACvD,OAAOD,EAAKE,QAAQC,MAAMC,KAAOH,EAC7B,CACEU,iBAAkBX,EAAKY,mBAAmBT,MAC1CU,mBAAoBb,EAAKY,mBAAmBN,OAE9C,CACEK,iBAAkBX,EAAKY,mBAAmBN,MAC1CO,mBAAoBb,EAAKY,mBAAmBT,QAIvCW,EAAwB,SAACC,EAAMC,GAI1C,IAAIC,EAAM,IAAIC,KAAKH,EAAKI,cAAeJ,EAAKK,WAAYL,EAAKM,WACzDC,EAAM,IAAIJ,KAAKF,EAAKG,cAAeH,EAAKI,WAAYJ,EAAKK,WAKzDE,GADgBN,EAAIO,UAAYF,EAAIE,WADf,MAKzB,OAAOP,EAAMK,EAAMhC,KAAKC,MAAMgC,GAAQjC,KAAKmC,KAAKF,IC5F5CG,E,uKASF,IAAMC,EAAYC,KAAKC,MAAM3C,OAAO4C,SAAlB,gCAAsDF,KAAKC,MAAM3C,OAAO4C,SAAxE,aAAqFlC,EAAqBgC,KAAKC,MAAM3C,QAArH,KAAkI,aAC9I6C,EAAK,UAAMH,KAAKC,MAAM3C,OAAO4C,UAAlB,UAAiCF,KAAKC,MAAM3C,OAAO4C,SAAnD,kBAAN,cACX,OACE,yBAAKE,UAAU,mDACb,kBAACC,EAAA,EAAD,KACE,+BAAQF,IAEV,uBAAGG,KAAI,UAAKC,YAAL,KAAgCH,UAAU,gBAC/C,yBAAKA,UAAU,oCAAoCI,IAAI,gDAAgDC,IAAI,cAE7G,wBAAIL,UAAU,cAAcL,Q,GAnBfW,aA2BNC,eAFc,SAAC,GAAD,MAAiB,CAAErD,OAAnB,EAAGA,UAEjBqD,CAA8Bb,GCX9Bc,EAvBC,kBACd,6BACE,wCACA,uBAAGR,UAAU,eAAb,mFAIA,yEAC8C,IAC5C,sEAFF,mCAKA,6BACA,qGAGA,mH,+DClBSS,EAAU,IAAIvB,KAAK,cACnBwB,EAAU,IAAIxB,KCSdyB,EAAe,CAC1BC,OAAQ,SACRC,SAAU,WACVC,OAAQ,CAAC,SAAU,aAERC,EAAmB,CAC9BC,WAAY,aACZC,cAAe,iBACfH,OAAQ,CAAC,aAAc,mBAEZI,EAAkB,CAC7BC,UAAW,QACXC,UAAW,QACXC,MAAO,MACPC,OAAQ,SACRR,OAAQ,CAAC,QAAS,QAAS,MAAO,WAEvBS,EAAqB,CAChCC,MAAO,QACPC,KAAM,OACNC,eAAgB,iBAChBZ,OAAQ,CAAC,QAAS,OAAQ,mBAEfa,EAAmB,CAC9BC,QAAS,UACTC,YAAa,cACbC,QAAS,UACTR,OAAQ,SACRR,OAAQ,CAAC,UAAW,cAAe,UAAW,WAEnCiB,EAAc,CACzBC,MAAO,gBACPC,MAAO,gBACPnB,OAAQ,CAAC,gBAAiB,kBAEfoB,EAAiB,CAC5BC,KAAM,YACNC,MAAO,iBACPC,MAAO,iBACPvB,OAAQ,CAAC,YAAa,iBAAkB,mBAG7BwB,EAAmB,SAACC,GAAD,OAAa,SAACC,EAAUC,GACtD,IAAMxE,EAAWwE,IAAWvF,OAAOkB,GAC7BsE,EAAiBD,IAAWE,MAAMC,IAF2B,EAe/DH,IAAWI,WAVbC,EALiE,EAKjEA,UACAC,EANiE,EAMjEA,QACAC,EAPiE,EAOjEA,OACAC,EARiE,EAQjEA,WACAC,EATiE,EASjEA,UACAC,EAViE,EAUjEA,aACAC,EAXiE,EAWjEA,WACAC,EAZiE,EAYjEA,SACAC,EAbiE,EAajEA,MACAC,EAdiE,EAcjEA,aAGIC,EACJjB,GAAWA,EAAQkB,eAAe,gBAC9BlB,EAAQgB,aACRA,EACAG,EACJnB,GAAWA,EAAQkB,eAAe,WAAalB,EAAQQ,QAAUA,EAE7DY,EAAaH,EACfE,EAAgBhB,EACdgB,EACAhB,EACFhC,EAEEkD,EAAoB,yBACxBd,YACAE,SACAC,aACAC,YACAC,eACAE,WACAC,QACArF,WACAsF,eACAH,cACGb,GAXqB,IAYxBQ,QAASY,IAGLE,EAAiBC,EAAsBF,GAE7CpB,EACEuB,EAAsB,2BACjBH,GADgB,IAEnBI,QAASvB,IAAWE,MAAMqB,QAAQC,OAAOJ,SAKzCC,EAAwB,SAAC,GAAD,IAC5BhB,EAD4B,EAC5BA,UACAC,EAF4B,EAE5BA,QACAC,EAH4B,EAG5BA,OACAC,EAJ4B,EAI5BA,WACAC,EAL4B,EAK5BA,UACAC,EAN4B,EAM5BA,aACAE,EAP4B,EAO5BA,SACAD,EAR4B,EAQ5BA,WACAE,EAT4B,EAS5BA,MACArF,EAV4B,EAU5BA,SAV4B,OAWxB,SAACD,EAAMkG,GACX,IAAMC,EAAO,IAAIjF,KAAKlB,EAAKoG,OAC3B,QAAID,EAAOrB,GAAaqB,EAAOpB,KAG7BsB,EAAsBrG,EAAMgF,IAC5BsB,EAA0BtG,EAAMiF,IAChCsB,EAAyBvG,EAAMkF,IAC/BsB,EAA4BxG,EAAMmF,IAClCsB,EAAwBzG,EAAMqF,EAAUpF,IACxCyG,EAAqB1G,EAAMsF,EAAOrF,IAClC0G,EAA0B3G,EAAMoF,MAI9BiB,EAAwB,SAACrG,EAAMgF,GACnC,QAAIhF,EAAKgF,SAAWA,EAAO4B,SAASjE,EAAaC,aAC5C5C,EAAKgF,SAAWA,EAAO4B,SAASjE,EAAaE,YAI9CyD,EAA4B,SAACtG,EAAMiF,GACvC,IAAM4B,EAAuC,OAApB7G,EAAKiF,WAC9B,QAAI4B,IAAqB5B,EAAW2B,SAAS7D,EAAiBC,iBAEzD6D,IAAqB5B,EAAW2B,SAAS7D,EAAiBE,iBAK3DsD,EAA2B,SAACvG,EAAMkF,GACtC,IAAM4B,EJ/GwB,SAAC9G,GAC/B,OAAmB,KAAfA,EAAK+G,OAAgC,KAAhB/G,EAAKgH,OAAsB,QAC5B,KAAfhH,EAAK+G,OAAgC,KAAhB/G,EAAKgH,OAAsB,QACjC,IAAfhH,EAAK+G,OAA+B,IAAhB/G,EAAKgH,OAAqB,MAC3C,SI2GKC,CAAiBjH,GAClC,OAAOkF,EAAU0B,SAASE,IAGtBN,EAA8B,SAACxG,EAAMmF,GACzC,IAAM+B,EJ7G2B,SAAClH,GAClC,OAAIA,EAAKmH,cAAgB,GAAW,QAC3BnH,EAAKmH,cAAgB,MAAc,iBAChC,OI0GaC,CAAoBpH,GAC7C,OAAOmF,EAAayB,SAASM,IAGzBT,EAA0B,SAACzG,EAAMqF,EAAUpF,GAC/C,IAAMoH,EJ5G4B,SAACrH,EAAMC,GACzC,OAAsB,IAAlBD,EAAKqF,SAAuB,YACvBrF,EAAKE,QAAQC,MAAMC,KAAOH,EAAiB,iBACxC,iBIyGcqH,CAAqBtH,EAAMC,GACrD,OAAOoF,EAASuB,SAASS,IAGrBX,EAAuB,SAAC1G,EAAMsF,EAAOrF,GACzC,QAAID,EAAKE,QAAQC,MAAMC,KAAOH,IAAaqF,EAAMsB,SAAS7C,EAAYC,WAElEhE,EAAKE,QAAQI,MAAMF,KAAOH,IAAaqF,EAAMsB,SAAS7C,EAAYE,SAKlE0C,EAA4B,SAAC3G,EAAMoF,GACvC,GAAqB,gBAAjBpF,EAAKuH,SACP,GAAInC,EAAWwB,SAASjD,EAAiBE,aAAc,OAAO,OACzD,GAAqB,YAAjB7D,EAAKuH,SACd,GAAInC,EAAWwB,SAASjD,EAAiBG,SAAU,OAAO,OACrD,GAAK0D,MAAMxH,EAAKuH,QAAQE,MAAM,KAAK,KAGxC,GAAIrC,EAAWwB,SAASjD,EAAiBL,QAAS,OAAO,OAFzD,GAAI8B,EAAWwB,SAASjD,EAAiBC,SAAU,OAAO,EAK5D,OAAO,GAGHmC,EAAwB,SAAC2B,GAAD,MAAc,CAC1CC,KAlLsC,2BAmLtCC,QAASF,IC3LEG,EAAU,SAAAF,GAAI,gBAAOA,EAAP,aACdG,GAAU,SAAAH,GAAI,gBAAOA,EAAP,eACdI,GAAU,SAAAJ,GAAI,gBAAOA,EAAP,cACdK,GAAW,SAAAL,GAAI,gBAAOA,EAAP,cCEfM,GAAc,cAGdC,GAAa,SAACjI,GAAD,IAAWkI,EAAX,uDAAyB,GAAzB,8CAAgC,WACxD3D,EACAC,GAFwD,uCAAA2D,EAAA,sDAIlDC,EAAa5D,KAEb6D,EAAkBD,EAAW1D,MAAM4D,WACpBD,EAAgBE,SAE/BC,EAAWN,EAAYO,OAAS,EAAIP,EAAY,GAAG/H,GAAK,KAExDuI,EAASN,EAAWM,OAX8B,SAclDhE,EAAQ,GACRiE,EAAe,EAEfC,EAAoB,EACpBC,GAAyB,EAlByB,eAoB9CC,EAAUJ,EAAOK,cACrB/I,EACAgJ,EAAOA,EAAKC,UAAOC,GAErB3E,EACmB,IAAjBoE,EACIQ,GAAgBL,GAChBM,GAAmB,CACjBN,UACAH,eACAC,oBACA7C,QAASrB,KAGjBH,EAASF,KAlC2C,UAmCvCyE,EAnCuC,QAmCpDE,EAnCoD,qBAoCjCA,EAAKjD,SApC4B,+DAoCzChG,EApCyC,SAqCzCI,KAAOqI,EArCkC,iBAqCxB9D,EAAM2E,KAAKtJ,GArCa,+BAuChD8I,GAAyB,EACzBnE,EAAK,sBAAOA,GAAP,YAAiBwD,IAxC0B,sKA6CpDS,IACAC,EAAoBvJ,KAAKmC,KAAKwH,EAAKM,MAAQ,IA9CS,WA+C7CN,EAAKC,MAAQJ,EA/CgC,yBAiDtDtE,EAASgF,GAAkBC,GAAkB9E,KAjDS,kDAmDtD+E,QAAQC,MAAR,MACqB,kBAAV,EAAP,GAA2BnF,EAASoF,GAAkB,EAAD,KAEvDpF,EACEoF,GACE,4EAxDgD,QA6DxDpF,EAASF,KA7D+C,wEAAhC,yDAgEpBmF,GAAoB,SAAC9E,GACzB,IAAIG,EAAYH,EAAM+D,OAClB,IAAIxH,KAAKyD,EAAMA,EAAM+D,OAAS,GAAGtC,OACjC3D,EAGJ,OAFAqC,EAAU+E,SAAS,EAAG,EAAG,EAAG,GAErB,CACL7D,QAASrB,EACTmF,MAAOhF,EACPF,IAAKD,EAAM+D,OAAS,IAAIxH,KAAKyD,EAAM,GAAGyB,OAAS1D,IAI7C0G,GAAkB,SAACL,GAAD,MAAc,CACpCpB,KAAME,EAAQI,IACdL,QAASmB,IAGLM,GAAqB,SAAC,GAAD,IACzBN,EADyB,EACzBA,QACAH,EAFyB,EAEzBA,aACAC,EAHyB,EAGzBA,kBACA7C,EAJyB,EAIzBA,QAJyB,MAKpB,CACL2B,KAAMK,GAASC,IACfL,QAAS,CAAEW,SAAUQ,EAASH,eAAcC,oBAAmB7C,aAG3DwD,GAAoB,SAACP,GAAD,MAAW,CACnCtB,KAAMG,GAAQG,IACdL,QAASqB,IAGLW,GAAoB,SAACD,GAAD,MAAY,CACpChC,KAAMI,GAAQE,IACdL,QAAS,CAAE+B,WC7FAI,GAAc,SAAC7K,GAAD,8CAAY,WAAOsF,EAAUC,GAAjB,2BAAA2D,EAAA,6DAC/BC,EAAa5D,KACb6D,EAAkBD,EAAWnJ,OAAOqJ,WACrBD,EAAgBE,SAE/BG,EAASN,EAAWM,OALW,SAO7BqB,EAAgBrB,EAAOsB,YAAY/K,GACzCsF,EAAS0F,GAAiBF,IARS,SASdA,EATc,cAS7BG,EAT6B,OAW7BC,EAAkBzB,EAAO0B,kBAAkBF,GACjD3F,EAAS0F,GAAiBE,IAZS,UAaZA,EAbY,QAa7BE,EAb6B,OAenC9F,EAAS0D,GAAWoC,EAASlK,KAE7BoE,EAAS+F,GAAmB,CAC1BnK,GAAIkK,EAASlK,GACb0B,SAAUwI,EAASxI,SACnB9C,KAAMwL,SAASF,EAAS5K,SACxBN,QAASkL,EAASlL,QAClBqL,iBAAkBH,EAASI,qBAtBM,kDA0BnChB,QAAQC,MAAR,MACqB,kBAAV,EAAP,GAA2BnF,EAASmG,GAAmB,EAAD,KACrDnG,EAASmG,GAAmB,2EA5BE,0DAAZ,yDAgCrBT,GAAmB,SAACnB,GAAD,MAAc,CACrCpB,KAAME,EA3CoB,gBA4C1BD,QAASmB,IAGLwB,GAAqB,SAACtB,GAAD,MAAW,CACpCtB,KAAMG,GAhDoB,gBAiD1BF,QAASqB,IAGL0B,GAAqB,SAAChB,GAAD,MAAY,CACrChC,KAAMI,GArDoB,gBAsD1BH,QAAS,CAAE+B,WCjDPiB,G,4MAKJC,MAAQ,CACN/I,SAAU,I,EAGZgJ,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZlJ,SAAUiJ,EAAME,OAAOC,S,EAI3BC,OAAS,SAACJ,GACRA,EAAMK,iBAEF,EAAKP,MAAM/I,WACb,EAAKD,MAAMwJ,QAAQ/B,KAAnB,gBAAiC,EAAKuB,MAAM/I,WAC5C,EAAKD,MAAMyJ,cAAc,EAAKT,MAAM/I,UAEpC,EAAKkJ,SAAS,CACZlJ,SAAU,KAGRyJ,SAASC,eACXD,SAASC,cAAcC,S,EAK7BC,aAAe,WAAO,IAAD,EAOf,EAAK7J,MAAM3C,OALbkB,EAFiB,EAEjBA,GACA0B,EAHiB,EAGjBA,SACA1C,EAJiB,EAIjBA,QACAJ,EALiB,EAKjBA,KACAyL,EANiB,EAMjBA,iBANiB,EAaf,EAAK5I,MAAM8C,MAHbmF,EAViB,EAUjBA,MACAlF,EAXiB,EAWjBA,IACAoB,EAZiB,EAYjBA,QAGI2F,EAAaC,KAAKC,UAAU,CAChCC,gBAlDkB,EAmDlB5M,OAAQ,CACNkB,KACA0B,WACA1C,UACAJ,OACAyL,oBAEF9F,MAAO,CACLmF,QACAlF,MACAoB,aAIA+F,EAAO,IAAIC,KAAK,CAACL,GAAa,CAAEhE,KAAM,4BAC1CsE,iBAAOF,EAAD,mBAAmBjK,EAAnB,UACNoK,OAAOC,MAAM,+E,EAGfC,SAAW,SAACrB,GACV,IAAMsB,EAAOtB,EAAME,OAAOqB,MAAM,GAC5BC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAACC,GACf,EAAKC,iBAAiBD,EAAIzB,OAAO2B,SAEnCL,EAAOM,WAAWR,I,EAGpBM,iBAAmB,SAAChB,GAClB,IAAM1C,EAAO2C,KAAKkB,MAAMnB,GACxB,EAAK9J,MAAMwJ,QAAQ/B,KAAnB,gBAAiCL,EAAK/J,OAAO4C,WAC7C,EAAKD,MAAMkL,iBAAiB9D,I,uDAI5B,OACE,0BAAM+D,SAAUpL,KAAKuJ,QACnB,yBAAKnJ,UAAU,cACb,yBAAKA,UAAU,eACb,2BAAOkJ,MAAOtJ,KAAKiJ,MAAM/I,SAAUmL,SAAUrL,KAAKkJ,iBAAkBoC,KAAK,KAAKvF,KAAK,OAAOwF,YAAY,iBAAiBnL,UAAU,iBACjI,0BAAMA,UAAU,mBACd,4BAAQ2F,KAAK,SAAS3F,UAAU,mBAAhC,iBAKN,uBAAGA,UAAU,eAAc,2BAAOA,UAAU,kBAAiB,0CAE7D,yBAAKA,UAAU,cACb,uBAAGA,UAAU,kCACX,2BAAO2F,KAAK,OAAOsF,SAAUrL,KAAKwK,SAAUhM,GAAG,aAAagN,MAAO,CAAEC,QAAS,UAC9E,4BAAQrL,UAAU,oBAAoBsL,QAAS,kBAAM/B,SAASgC,eAAe,cAAcC,UAA3F,eACC5L,KAAKC,MAAM8C,MAAMqB,QAAQ0C,OAAS,GAAM,4BAAQ1G,UAAU,oBAAoBsL,QAAS1L,KAAK8J,cAApD,sB,GArG7BpJ,aAmHTmL,eAAWlL,aANG,SAAC,GAAD,MAAwB,CAAErD,OAA1B,EAAGA,OAA+ByF,MAAlC,EAAWA,UACb,SAACH,GAAD,MAAe,CACxCuI,iBAAkB,SAAA9D,GAAI,OAAIzE,EDlHA,SAAC,GAAD,IAAGtF,EAAH,EAAGA,OAAQyF,EAAX,EAAWA,MAAX,OAAuB,SAACH,EAAUC,GAC5D,IAAM6D,EAAkB7D,IAAWvF,OAAOqJ,SACtCD,GAAiBA,EAAgBE,SAErChE,EAAS+F,GAAmBrL,IAC5BsF,EAAS0D,GAAWhJ,EAAOkB,GAAIuE,EAAMqB,WC6GF0H,CAAazE,KAChDqC,cAAe,SAAApM,GAAM,OAAIsF,EAASuF,GAAY7K,QAGtBqD,CAAkDqI,K,oBCxHtE+C,GAAQ,CACZ,CAAC,oBAAqB,kBACtB,CAAC,eAAgB,6BACjB,CAAC,oBAAqB,kCACtB,CAAC,sBAAuB,oCACxB,CAAC,kBAAmB,wBACpB,CAAC,aAAc,8BAyBFC,G,4MAhBbC,cAAgB,SAAC9C,EAAO+C,GACtB/C,EAAMK,iBACN,EAAKvJ,MAAMkM,aAAaD,I,EAG1BE,WAAa,SAACC,EAAU/H,GAAX,OAAsB,wBAAIgI,IAAKhI,GAAO,uBAAGhE,KAAI,WAAM+L,EAAS,IAAMX,QAAS,SAACa,GAAD,OAAO,EAAKN,cAAcM,EAAGF,EAAS,MAAMA,EAAS,M,uDAG3I,OACE,kBAAC,KAAD,CAAWjM,UAAU,YAAYoM,MAAOT,GAAMU,KAAI,SAAAJ,GAAQ,OAAIA,EAAS,MAAKK,iBAAiB,UAC1FX,GAAMU,IAAIzM,KAAKoM,iB,GAfC1L,aC4BViM,I,MAvCK,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MAIfoB,EAAgB,GAAAlP,KAAKmP,GAE3B,OACE,yBACE1H,MAAO2H,IACP1H,OAAQ0H,IACRC,QAAO,cAASD,IAAT,YAA4BA,KACnCE,UAAU,cACVC,QAAQ,MACRC,MAAM,6BACNC,WAAW,+BACXC,eAAe,kBACf5B,MAAOA,GAEP,4BACE6B,EAlBS,GAmBTC,GAjBcC,GAkBdC,GAlBcD,GAmBdE,KAAK,QACLrN,UAAU,0BAEZ,4BACEiN,EAzBS,GA0BTC,GAxBcC,GAyBdC,GAzBcD,GA0BdE,KAAK,cACLC,YA5Bc,EA6BdC,OAAO,QACPC,gBAAiBhB,EACjBxM,UAAU,+BC3BZyN,G,uKACM,IAAD,EASH7N,KAAKC,MAPP0G,EAFK,EAELA,SACAmH,EAHK,EAGLA,aACAC,EAJK,EAILA,YACAC,EALK,EAKLA,WACAC,EANK,EAMLA,eACAC,EAPK,EAOLA,YACAhL,EARK,EAQLA,UAGIiL,EAAaF,EACjB,yBAAK7N,UAAU,0BACb,6BACA,2BAAOA,UAAU,kBACf,6EAEF,kBAAC,GAAD,CAAY+L,aAAcnM,KAAKC,MAAMkM,gBAErC,KACEiC,EACJN,KAAkBnH,GAAYqH,EAAa,GACzC,oCACGF,GACC,yBAAK1N,UAAU,oBAAoB0N,GAErC,kBAAC,GAAD,OAGF,oCACE,yBAAK1N,UAAU,6BACb,kBAAC,GAAD,CACEoL,MAAO,CACLrG,MAAO,GACPC,OAAQ,GACRiJ,YAAa,GACbC,KAAM,cAGV,sEACyCP,EAAc,EACpDC,GAAU,cAAWA,KAGzB9K,IAAcrC,GACb,yBAAKT,UAAU,QACb,4BACEA,UAAU,8BACVsL,QAASwC,EACT/N,MAAM,wDAHR,mBAYV,OACE,yBAAKC,UAAU,wCACb,yBAAKA,UAAU,uBACZgO,EAEAD,EAED,6BACA,uBACE7N,KAAK,uEACL+I,OAAO,SACPkF,IAAI,gCAHN,qC,GAnEY7N,aAuFhB8N,GAAqB,CAAEN,YLcF,kBAAM,SAACtL,EAAUC,GAC1C,IAAME,EAAQF,IAAWE,MAAMqB,QAG/B,GAFA0D,QAAQ7J,IAAI,OAES,IAAjB8E,EAAM+D,OAAV,CAEA,IAAI5D,EAAYH,EAAM+D,OAClB,IAAIxH,KAAKyD,EAAMA,EAAM+D,OAAS,GAAGtC,OACjC3D,EAEJqC,EAAU+E,SAAS,EAAG,EAAG,EAAG,GAC5BrF,EACEF,EAAiB,CACfQ,mBKzBSvC,gBAVc,SAAC,GAAD,IAAGsC,EAAH,EAAGA,WAAY3F,EAAf,EAAeA,OAAQyF,EAAvB,EAAuBA,MAAvB,MAAoC,CAC/D4D,SAAU5D,EAAM4D,SAChBoH,YAAahL,EAAMiE,aACnBgH,WAAYjL,EAAMkE,kBAClB6G,aAAcxQ,EAAOmR,YAAc1L,EAAM0L,WACzCR,eAAgBhL,EAAWmB,QAAQ0C,OAAS,EAC5C5D,UAAWD,EAAWC,aAIqBsL,GAA9B7N,CAAkDkN,IC7F3Da,I,6KAOM,IACAZ,EAAiB9N,KAAKC,MAAtB6N,aAIR,OACE,yBAAK1N,UAAU,mBACb,yBAAKA,UAAU,yBAAyB+E,MAAM,MAAMC,OAAO,OACzD,4BACEhF,UAAU,eACVkN,GAAG,OACHE,GAAG,OACHH,EAAE,OACFK,YAAY,IACZD,KAAK,YAEP,4BACErN,UAAU,eACVkN,GAAG,OACHE,GAAG,OACHH,EAAE,OACFK,YAAY,IACZD,KAAK,YAEP,4BACErN,UAAU,eACVkN,GAAG,QACHE,GAAG,OACHH,EAAE,OACFK,YAAY,IACZD,KAAK,YAEP,4BACErN,UAAU,eACVkN,GAAG,OACHE,GAAG,QACHH,EAAE,OACFK,YAAY,IACZD,KAAK,YAEP,4BACErN,UAAU,cACVkN,GAAG,OACHE,GAAG,OACHH,EAAE,KACFK,YAAY,IACZD,KAAK,aAGT,uBAAGrN,UAAU,gBAAgB0N,GA9ChB,uC,GAVKpN,cAqEXC,gBAPc,SAAC,GAAD,IAAGrD,EAAH,EAAGA,OAAQyF,EAAX,EAAWA,MAAX,MAAwB,CACnD4L,iBAAkBrR,EAAOqJ,SACzBoH,YAAahL,EAAMiE,aACnBgH,WAAYjL,EAAMkE,kBAClB6G,aAAcxQ,EAAOmR,YAAc1L,EAAM0L,cAG5B9N,CAA8B+N,I,QC4G9BE,G,4MAzKb3F,MAAQ,CACN4F,iBAAkB,CAChBC,gBAAiB,cACjBC,UAAW,CAAEC,IAAK,IAClBC,OAAQ,CAAC,UAAW,WACpBC,kBAAmB,CAAExL,MAAO,WAC5ByL,OAAQ,CACNC,SAAU,SACVC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,KAGdC,UAAW,CACTC,SAAS,EACTC,OAAQ,QACRC,SAAU,MAGdC,gBAAiB,CACfd,gBAAiB,cACjBC,UAAW,CAAEC,IAAK,IAClBC,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CC,kBAAmB,CAAExL,MAAO,WAC5ByL,OAAQ,CACNU,SAAU,EACVT,SAAU,SACVC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,KAGdC,UAAW,CACTC,SAAS,EACTC,OAAQ,QACRC,SAAU,O,EAKhBG,yBAA2B,SAAC/M,EAAO1E,GACjC,IAD8C,EAC1C0R,EAAa,EACfC,EAAa,EACbC,EAAc,EACdC,EAAc,EAJ8B,cAK7BnN,GAL6B,IAK9C,2BAAwB,CAAC,IAAhB3E,EAAe,QAClBA,EAAKE,QAAQC,MAAMC,KAAOH,GAC5B0R,IACI3R,EAAKO,YACPsR,MAGFD,IACI5R,EAAKK,YACPyR,MAdwC,8BAmB9C,MAAO,CACLH,aACAE,cACAD,aACAE,gB,uDAIM,IAAD,EACmBlQ,KAAKC,MAAvB8C,EADD,EACCA,MAAOzF,EADR,EACQA,OAET6S,EAAanQ,KAAK8P,yBAAyB/M,EAAOzF,EAAOkB,IAEzD4R,EAAa,CACjB,CAAC,QAAS,SACV,CAAC,QAASD,EAAWJ,YACrB,CAAC,QAASI,EAAWH,aAEjBK,EAAa,CACjB,CAAC,SAAU,SACX,CAAC,SAAUF,EAAWF,YAAcE,EAAWD,aAC/C,CACE,OACAC,EAAWJ,WACTI,EAAWH,YACVG,EAAWF,YAAcE,EAAWD,eAGrCI,EACJH,EAAWJ,WAAa,EACpB,CACE,CAAC,SAAU,SACX,CAAC,SAAUI,EAAWF,aACtB,CAAC,OAAQE,EAAWJ,WAAaI,EAAWF,cAE9C,KACAM,EACJJ,EAAWH,WAAa,EACpB,CACE,CAAC,SAAU,SACX,CAAC,SAAUG,EAAWD,aACtB,CAAC,OAAQC,EAAWH,WAAaG,EAAWD,cAE9C,KAEN,OACE,6BAAS9P,UAAU,eACjB,wBAAI5B,GAAIwB,KAAKC,MAAMzB,GAAI4B,UAAU,eAC9BJ,KAAKC,MAAME,OAEd,yBAAKC,UAAU,OACZgQ,EACC,yBAAKhQ,UAAU,4BACb,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM4F,iBACpBxH,KAAM+I,EACNjL,MAAO,OACPC,OAAQ,WAGV,MAEN,wBAAIhF,UAAU,eAAd,kBACA,yBAAKA,UAAU,OACZiQ,EACC,yBAAKjQ,UAAU,YACb,wBAAIA,UAAU,eAAd,SACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2G,gBACpBvI,KAAMgJ,EACNlL,MAAO,OACPC,OAAQ,WAGV,KACHkL,EACC,yBAAKlQ,UAAU,YACb,wBAAIA,UAAU,eAAd,YACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2G,gBACpBvI,KAAMiJ,EACNnL,MAAO,OACPC,OAAQ,WAGV,KACHmL,EACC,yBAAKnQ,UAAU,YACb,wBAAIA,UAAU,eAAd,YACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2G,gBACpBvI,KAAMkJ,EACNpL,MAAO,OACPC,OAAQ,WAGV,MAELpF,KAAKC,MAAMyQ,Y,GA5KOhQ,aC6LZiQ,G,4MAnLb1H,MAAQ,CACN2H,gBAAiB,CACf9B,gBAAiB,cACjBC,UAAW,CAAEC,IAAK,GAAI6B,KAAM,EAAGC,MAAO,GACtC7B,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CC,kBAAmB,CAAExL,MAAO,WAC5ByL,OAAQ,CACNC,SAAU,SACVC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,MAIhBwB,mBAAoB,CAClBjC,gBAAiB,cACjBkC,WAAW,EACXjC,UAAW,CAAEC,IAAK,IAClBC,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CE,OAAQ,CACNU,SAAU,EACVT,SAAU,SACVC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,KAGd0B,MAAO,CACL5B,UAAW,CAAE3L,MAAO,UAAW4L,SAAU,SAAUC,SAAU,KAE/D2B,MAAO,CACL7B,UAAW,CAAE3L,MAAO,UAAW4L,SAAU,SAAUC,SAAU,O,EAKnE4B,gCAAkC,SAACC,EAAehT,GAChD,IAAMiT,EAAQlT,EAAYC,EAAMgT,EAAc5S,IAE9C,GAAqB,gBAAjBJ,EAAKuH,QACPyL,EAAc,GAAD,OAAIC,EAAQ,MAAQ,MAApB,gBACR,GAAqB,YAAjBjT,EAAKuH,QACdyL,EAAc,GAAD,OAAIC,EAAQ,MAAQ,MAApB,iBACR,GAAKzL,MAAMxH,EAAKuH,QAAQE,MAAM,KAAK,IAUxCuL,EAAc,GAAD,OAAIC,EAAQ,MAAQ,MAApB,iBAVgC,CAC7C,IAAMC,EAASC,WAAWnT,EAAKuH,QAAQE,MAAM,KAAK,GAAI,IAChD2L,EAAY9T,KAAKC,MAAM2T,EAAS,IAElCtG,EAA2C,IAAjCwG,EAAY,EAAIA,EAAY,GAAU,IACpDxG,EAAM,UAAMqG,EAAQ,MAAQ,MAAtB,YAA+BrG,GAErCoG,EAAc,GAAD,OAAIC,EAAQ,MAAQ,MAApB,aACbD,EAAcpG,KAKhB,OAAOoG,G,EAGTK,4BAA8B,SAAC1O,EAAO1E,GACpC,IAAI+S,EAAgB,CAClB5S,GAAIH,EACJ,YAAa,EACb,YAAa,EACb,WAAY,EACZ,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,SAAU,EACV,SAAU,EACV,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,WAAY,EACZ,YAAa,EACb,YAAa,GAGf,OAAO0E,EAAM2O,OAAO,EAAKP,gCAAiCC,I,gEAG1CrO,EAAO1E,GACvB,IAAM+S,EAAgBpR,KAAKyR,4BAA4B1O,EAAO1E,GAE9D,MAAO,CACL+R,WAAY,CACV,CAAC,SAAU,SACX,CAAC,UAAWgB,EAAc,aAC1B,CAAC,SAAUA,EAAc,YACzB,CAAC,UAAWA,EAAc,cAC1B,CAAC,QAASA,EAAc,eAE1Bf,WAAY,CACV,CAAC,SAAU,SACX,CAAC,UAAWe,EAAc,aAC1B,CAAC,SAAUA,EAAc,YACzB,CAAC,UAAWA,EAAc,cAC1B,CAAC,QAASA,EAAc,eAE1Bd,WAAY,CACV,CAAC,UAAW,SAAZ,QACA,CAAC,MAAOc,EAAc,WAAY,MAClC,CAAC,MAAOA,EAAc,WAAY,MAClC,CAAC,MAAOA,EAAc,WAAY,MAClC,CAAC,MAAOA,EAAc,WAAY,MAClC,CAAC,KAAMA,EAAc,UAAW,MAChC,CAAC,KAAM,KAAMA,EAAc,WAC3B,CAAC,MAAO,KAAMA,EAAc,YAC5B,CAAC,MAAO,KAAMA,EAAc,YAC5B,CAAC,MAAO,KAAMA,EAAc,YAC5B,CAAC,MAAO,KAAMA,EAAc,gB,+BAKxB,IAAD,EACmBpR,KAAKC,MAAvB8C,EADD,EACCA,MAAOzF,EADR,EACQA,OADR,EAGwC0C,KAAK2R,kBAClD5O,EACAzF,EAAOkB,IAFD4R,EAHD,EAGCA,WAAYC,EAHb,EAGaA,WAAYC,EAHzB,EAGyBA,WAKhC,OACE,6BAASlQ,UAAU,eACjB,wBAAI5B,GAAIwB,KAAKC,MAAMzB,GAAI4B,UAAU,eAC9BJ,KAAKC,MAAME,OAEd,yBAAKC,UAAU,OACZiQ,EACC,yBAAKjQ,UAAU,YACb,wBAAIA,UAAU,eAAd,UACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2H,gBACpBvJ,KAAMgJ,EACNlL,MAAO,OACPC,OAAQ,WAGV,KACHgL,EACC,yBAAKhQ,UAAU,YACb,wBAAIA,UAAU,eAAd,QACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2H,gBACpBvJ,KAAM+I,EACNjL,MAAO,OACPC,OAAQ,WAGV,MAEN,yBAAKhF,UAAU,OACZkQ,EACC,yBAAKlQ,UAAU,UACb,wBAAIA,UAAU,eAAd,8BACA,kBAAC,KAAD,CACEoQ,UAAU,cACVC,QAASzQ,KAAKiJ,MAAM8H,mBACpB1J,KAAMiJ,EACNnL,MAAO,OACPC,OAAQ,WAGV,W,GApLwB1E,aC+NvBkR,G,4MAxNb3I,MAAQ,CACN4F,iBAAkB,CAChBC,gBAAiB,cACjBC,UAAW,CACTC,IAAK,GACL6B,KAAM,EACNC,MAAO,GAET7B,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CC,kBAAmB,CAAExL,MAAO,WAC5ByL,OAAQ,CACNU,SAAU,EACVT,SAAU,SACVyC,UAAW,SACXxC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,MAIhBqB,gBAAiB,CACf9B,gBAAiB,cACjBC,UAAW,CAAEC,IAAK,IAClBC,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CC,kBAAmB,CAAExL,MAAO,WAC5ByL,OAAQ,CACNU,SAAU,EACVT,SAAU,SACVC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,O,EAMlBuC,kBAAoB,SAAC/O,EAAO1E,GAC1B,IAAI0T,EAAgB,EAClBC,EAAgB,EAChBC,EAAY,EACZC,EAAa,EACbC,EAAiB,EACjBC,EAAiB,EACjBC,EAAa,EACbC,EAAc,EAkBhB,OAhBAvP,EAAMwP,SAAQ,SAACnU,GACM,KAAfA,EAAK+G,OAAgC,KAAhB/G,EAAKgH,QAC5B2M,IACK5T,EAAYC,EAAMC,IAAW8T,KACV,KAAf/T,EAAK+G,OAAgC,KAAhB/G,EAAKgH,QACnC4M,IACK7T,EAAYC,EAAMC,IAAW+T,KACV,IAAfhU,EAAK+G,OAA+B,IAAhB/G,EAAKgH,QAClC6M,IACK9T,EAAYC,EAAMC,IAAWgU,MAElCH,IACK/T,EAAYC,EAAMC,IAAWiU,QAI/B,CACLP,gBACAC,gBACAC,YACAC,aACAC,iBACAC,iBACAC,aACAC,gB,EAIJX,kBAAoB,SAAC5O,EAAO1E,GAAc,IAAD,EAUnC,EAAKyT,kBAAkB/O,EAAO1E,GARhC0T,EAFqC,EAErCA,cACAC,EAHqC,EAGrCA,cACAC,EAJqC,EAIrCA,UACAC,EALqC,EAKrCA,WACAC,EANqC,EAMrCA,eACAC,EAPqC,EAOrCA,eACAC,EARqC,EAQrCA,WACAC,EATqC,EASrCA,YAGF,MAAO,CACLlC,WAAY,CACV,CAAC,OAAQ,SACT,CAAC,QAAS2B,GACV,CAAC,QAASC,GACV,CAAC,MAAOC,GACR,CAAC,QAASC,IAEZ7B,WACE0B,EAAgB,EACZ,CACE,CAAC,SAAU,SACX,CAAC,SAAUI,GACX,CAAC,OAAQJ,EAAgBI,IAE3B,KACN7B,WACE0B,EAAgB,EACZ,CACE,CAAC,SAAU,SACX,CAAC,SAAUI,GACX,CAAC,OAAQJ,EAAgBI,IAE3B,KACN7B,WACE0B,EAAY,EACR,CACE,CAAC,SAAU,SACX,CAAC,SAAUI,GACX,CAAC,OAAQJ,EAAYI,IAEvB,KACNG,WACEN,EAAa,EACT,CACE,CAAC,SAAU,SACX,CAAC,SAAUI,GACX,CAAC,OAAQJ,EAAaI,IAExB,O,uDAIA,IAAD,EACmBtS,KAAKC,MAAvB8C,EADD,EACCA,MAAOzF,EADR,EACQA,OADR,EASH0C,KAAK2R,kBAAkB5O,EAAOzF,EAAOkB,IALvC4R,EAJK,EAILA,WACAC,EALK,EAKLA,WACAC,EANK,EAMLA,WACAC,EAPK,EAOLA,WACAiC,EARK,EAQLA,WAGF,OACE,6BAASpS,UAAU,eACjB,wBAAI5B,GAAIwB,KAAKC,MAAMzB,GAAI4B,UAAU,eAC9BJ,KAAKC,MAAME,OAEd,yBAAKC,UAAU,OACZgQ,EACC,yBAAKhQ,UAAU,4BACb,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM4F,iBACpBxH,KAAM+I,EACNjL,MAAO,OACPC,OAAQ,WAGV,MAEN,wBAAIhF,UAAU,eAAd,kBACA,yBAAKA,UAAU,OACZiQ,EACC,yBAAKjQ,UAAU,YACb,wBAAIA,UAAU,eAAd,SACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2H,gBACpBvJ,KAAMgJ,EACNlL,MAAO,OACPC,OAAQ,WAGV,KACHkL,EACC,yBAAKlQ,UAAU,YACb,wBAAIA,UAAU,eAAd,SACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2H,gBACpBvJ,KAAMiJ,EACNnL,MAAO,OACPC,OAAQ,WAGV,KACHmL,EACC,yBAAKnQ,UAAU,YACb,wBAAIA,UAAU,eAAd,OACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2H,gBACpBvJ,KAAMkJ,EACNpL,MAAO,OACPC,OAAQ,WAGV,KACHoN,EACC,yBAAKpS,UAAU,YACb,wBAAIA,UAAU,eAAd,eACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2H,gBACpBvJ,KAAMmL,EACNrN,MAAO,OACPC,OAAQ,WAGV,W,GAzNgB1E,aC8Lf+R,G,4MArLbxJ,MAAQ,CACN4F,iBAAkB,CAChBC,gBAAiB,cACjBC,UAAW,CACTC,IAAK,GACL6B,KAAM,EACNC,MAAO,GAET7B,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CC,kBAAmB,CAAExL,MAAO,WAC5ByL,OAAQ,CACNU,SAAU,EACVT,SAAU,SACVC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,MAIhBqB,gBAAiB,CACf9B,gBAAiB,cACjBC,UAAW,CAAEC,IAAK,IAClBC,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CC,kBAAmB,CAAExL,MAAO,WAC5ByL,OAAQ,CACNU,SAAU,EACVT,SAAU,SACVC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,O,EAMlBmD,oBAAsB,SAAC3P,EAAO1E,GAC5B,IAAIsU,EAAa,EACfC,EAAY,EACZC,EAAsB,EACtBC,EAAc,EACdC,EAAa,EACbC,EAAuB,EAoBzB,OAnBAjQ,EAAMwP,SAAQ,SAACnU,GACTA,EAAKmH,cAAgB,IACvBoN,IACKxU,EAAYC,EAAMC,IACrByU,KAEO1U,EAAKmH,cAAgB,OAC9BsN,IACK1U,EAAYC,EAAMC,IACrB2U,MAGFJ,IACKzU,EAAYC,EAAMC,IACrB0U,QAKC,CACLJ,aACAC,YACAC,sBACAC,cACAC,aACAC,yB,gEAIcjQ,EAAO1E,GACvB,IAAM4U,EAAQjT,KAAK0S,oBAAoB3P,EAAO1E,GAE9C,MAAO,CACL+R,WAAY,CACV,CAAC,OAAQ,SACT,CAAC,QAAS6C,EAAMN,YAChB,CAAC,OAAQM,EAAML,WACf,CAAC,iBAAkBK,EAAMJ,sBAE3BxC,WACE4C,EAAMN,WAAa,EACf,CACE,CAAC,SAAU,SACX,CAAC,SAAUM,EAAMH,aACjB,CAAC,OAAQG,EAAMN,WAAaM,EAAMH,cAEpC,KACNxC,WACE2C,EAAML,UAAY,EACd,CACE,CAAC,SAAU,SACX,CAAC,SAAUK,EAAMF,YACjB,CAAC,OAAQE,EAAML,UAAYK,EAAMF,aAEnC,KACNxC,WACE0C,EAAMJ,oBAAsB,EACxB,CACE,CAAC,SAAU,SACX,CAAC,SAAUI,EAAMD,sBACjB,CAAC,OAAQC,EAAMJ,oBAAsBI,EAAMD,uBAE7C,Q,+BAIA,IAAD,EACmBhT,KAAKC,MAAvB8C,EADD,EACCA,MAAOzF,EADR,EACQA,OADR,EAOH0C,KAAK2R,kBAAkB5O,EAAOzF,EAAOkB,IAJvC4R,EAHK,EAGLA,WACAC,EAJK,EAILA,WACAC,EALK,EAKLA,WACAC,EANK,EAMLA,WAGF,OACE,6BAASnQ,UAAU,eACjB,wBAAI5B,GAAIwB,KAAKC,MAAMzB,GAAI4B,UAAU,eAC9BJ,KAAKC,MAAME,OAEd,yBAAKC,UAAU,OACZgQ,EACC,yBAAKhQ,UAAU,4BACb,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM4F,iBACpBxH,KAAM+I,EACNjL,MAAO,OACPC,OAAQ,WAGV,MAEN,wBAAIhF,UAAU,eAAd,kBACA,yBAAKA,UAAU,OACZiQ,EACC,yBAAKjQ,UAAU,YACb,wBAAIA,UAAU,eAAd,SACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2H,gBACpBvJ,KAAMgJ,EACNlL,MAAO,OACPC,OAAQ,WAGV,KACHkL,EACC,yBAAKlQ,UAAU,YACb,wBAAIA,UAAU,eAAd,QACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2H,gBACpBvJ,KAAMiJ,EACNnL,MAAO,OACPC,OAAQ,WAGV,KACHmL,EACC,yBAAKnQ,UAAU,YACb,wBAAIA,UAAU,eAAd,kBACA,kBAAC,KAAD,CACEoQ,UAAU,WACVC,QAASzQ,KAAKiJ,MAAM2H,gBACpBvJ,KAAMkJ,EACNpL,MAAO,OACPC,OAAQ,WAGV,W,GAtLkB1E,a,SCFjBwS,GAFC,SAAC,GAAD,IAAG5S,EAAH,EAAGA,KAAMH,EAAT,EAASA,MAAOgT,EAAhB,EAAgBA,SAAhB,OAAgC,uBAAG7S,KAAMA,EAAMH,MAAOA,GAASgT,EAAU9J,OAAO,SAASkF,IAAI,gCAAgC4E,ICY9HC,GARI,SAAC,GAAgB,IAAd9V,EAAa,EAAbA,OACdgD,EAAI,UAAM+S,YAAN,qBAA2B/V,EAAOkB,GAAlC,YAAwClB,EAAO4C,UACnDoT,EAAG,UAAMC,iBAAN,OAAqBjW,EAAOkB,GAA5B,iBACH0B,EAAQ,UAAM5C,EAAO4C,SAAb,aAA0BlC,EAAqBV,GAA/C,KAEd,OAAQ,kBAAC,GAAD,CAASgD,KAAMA,EAAMH,MAAOD,GAAU,yBAAKE,UAAU,SAASI,IAAK8S,EAAK7S,IAAKP,IAA7E,IAA2FA,I,oBCFtFsT,GAFE,SAAC,GAAD,IAAGpV,EAAH,EAAGA,KAAH,OAAe,kBAAC,GAAD,CAASkC,KAAI,UAAK+S,YAAL,gBAAqBjV,EAAKqV,QAAQC,OAAO7N,MAAM,UAAU,KAAO8N,KAAOvV,EAAKoG,OAAOoP,OAAO,iBC+WxHC,G,4MA9VbC,qBAAuB,SAAC/Q,EAAOzF,GAC7B,IACEyW,EAFsC,EACpCC,EAAY,GAEZC,EAAa,CAAE7W,KAAM,IACrB8W,EAAe,CAAE9W,KAAM,GACvB+W,EAAa,CAAEpR,MAAO,GACtBqR,EAAoB,CAAEC,YAAa,MANC,cAQrBtR,GARqB,IAQxC,2BAA0B,CAAC,IAAhB3E,EAAe,QAClBiT,EAAQlT,EAAYC,EAAMd,EAAOkB,IAE/BK,EAAaD,EAAyBR,EAAMd,EAAOkB,IAAnDK,SAHgB,EAOpBC,EAAmCV,EAAMd,EAAOkB,IAFlDS,EALsB,EAKtBA,mBACAF,EANsB,EAMtBA,iBAEIuV,EAAejX,EAAcwB,GAEnC,GAAIwS,EAAO,CACT,IAAMgD,EACJtW,EAAgBc,GAChBd,EAAgBT,GAChBS,EAAgBkB,GAChBlB,EAAgBgB,GACdsV,EAAaD,EAAkBC,aACjCD,EAAiB,2BACZvV,GADY,IAEfwV,aACAjW,UAID4V,EAAUnV,EAASL,KAStBwV,EAAUnV,EAASL,IAAIuE,QACnBsO,EACF2C,EAAUnV,EAASL,IAAI+V,MAEvBP,EAAUnV,EAASL,IAAIgW,QAZzBR,EAAUnV,EAASL,IAAM,CACvBK,WACAzB,KAAMkX,EACNvR,MAAO,EACPwR,IAAKlD,EAAQ,EAAI,EACjBmD,KAAMnD,EAAQ,EAAI,GAWlBiD,EAAeJ,EAAa9W,OAC9B8W,EAAY,2BACPrV,GADO,IAEVzB,KAAMkX,KAGNA,EAAeL,EAAW7W,OAC5B6W,EAAU,2BACLpV,GADK,IAERzB,KAAMkX,MA1D4B,8BA8DxC,IAAMG,EAAyBC,OAAOxT,OAAO8S,GAAWW,MACtD,SAACnO,EAAGoO,GAAJ,OAAUA,EAAE7R,MAAQyD,EAAEzD,SAExB,GAAI0R,EAAuB3N,OAAS,EAAG,CACrC,IAAM+N,EAAgBJ,EAAuB,GAC7CN,EAAU,2BACLU,EAAchW,UADT,IAERkE,MAAO8R,EAAc9R,QAIzB,IAAM+R,EAAqBL,EAAuBpQ,QAChD,SAAC0Q,GAAD,OAAOA,EAAEhS,MAAQ,KAKnB,MAAO,CACLmR,eACAD,aACAE,aACAC,oBACAL,kBAPFA,EAAoBW,OAAOM,KAAKhB,GAAWlN,OAQzCgO,qBACAG,wBAAyBlS,EAAM+D,OAASiN,GAAmBmB,QAAQ,K,gEAIrDnS,EAAOzF,GACvB,IAAM6X,EAAgBnV,KAAK8T,qBAAqB/Q,EAAOzF,GAGjD8X,EAAiB1X,KAAK2X,IAAIF,EAAclB,WAAW7W,KAAM,GAAK,EAC9DkY,EAAmB5X,KAAK6X,IAAIJ,EAAcjB,aAAa9W,KAAM,IAAM,EACnEoY,EAAcnY,EAAc2C,KAAKC,MAAM3C,QAAU,EAEvD,MAAO,CACLyW,kBAAmBoB,EAAcpB,kBACjC0B,YAAa,CACXnV,KAAK,GAAD,OAAKoV,GAAQrC,SAAb,qBAAkC8B,EAAclB,WAAWzV,GAA3D,YAAiE2W,EAAclB,WAAW/T,UAC9FC,MAAM,GAAD,OAAKgV,EAAclB,WAAW/T,SAA9B,aAA2ClC,EAC9CmX,EAAclB,YADX,KAGLzI,MAAO,CAAEqF,KAAK,GAAD,OAAsB,WAAjBuE,EAAL,MACb9B,IAAI,GAAD,OAAKoC,GAAQnC,cAAb,OAA4B4B,EAAclB,WAAWzV,GAArD,kBAELmX,SAAU,CACRrV,KAAK,GAAD,OAAKoV,GAAQrC,SAAb,qBAAkCrT,KAAKC,MAAM3C,OAAOkB,GAApD,YAA0DwB,KAAKC,MAAM3C,OAAO4C,UAChFC,MAAM,GAAD,OAAKH,KAAKC,MAAM3C,OAAO4C,SAAvB,aAAoClC,EACvCgC,KAAKC,MAAM3C,QADR,KAGLkO,MAAO,CAAEqF,KAAK,GAAD,OAAmB,WAAd2E,EAAL,MACblC,IAAI,GAAD,OAAKoC,GAAQnC,cAAb,OAA4BvT,KAAKC,MAAM3C,OAAOkB,GAA9C,kBAELoX,cAAe,CACbtV,KAAK,GAAD,OAAKoV,GAAQrC,SAAb,qBAAkC8B,EAAcjB,aAAa1V,GAA7D,YAAmE2W,EAAcjB,aAAahU,UAClGC,MAAM,GAAD,OAAKgV,EAAcjB,aAAahU,SAAhC,aAA6ClC,EAChDmX,EAAcjB,cADX,KAGL1I,MAAO,CAAEqF,KAAK,GAAD,OAAwB,WAAnByE,EAAL,MACbhC,IAAI,GAAD,OAAKoC,GAAQnC,cAAb,OAA4B4B,EAAcjB,aAAa1V,GAAvD,kBAELqX,eAAgBV,EAAchB,WAC9B2B,sBAAuBX,EAAcf,kBACrCa,uBAAwBE,EAAcF,uBACtCH,mBAAoBK,EAAcL,sB,+BAI5B,IAAD,EACmB9U,KAAKC,MAAvB8C,EADD,EACCA,MAAOzF,EADR,EACQA,OADR,EAWH0C,KAAK2R,kBAAkB5O,EAAOzF,GARhCyW,EAHK,EAGLA,kBACA0B,EAJK,EAILA,YACAE,EALK,EAKLA,SACAC,EANK,EAMLA,cACAC,EAPK,EAOLA,eACAC,EARK,EAQLA,sBACAb,EATK,EASLA,uBACAH,EAVK,EAULA,mBAGF,OAAKf,EAGH,6BAAS3T,UAAU,eACjB,wBAAI5B,GAAIwB,KAAKC,MAAMzB,GAAI4B,UAAU,eAC9BJ,KAAKC,MAAME,MADd,KACuB4T,GAGvB,yBAAK3T,UAAU,OACb,yBACE5B,GAAG,yBACH4B,UAAU,wCAEV,wBAAIA,UAAU,cACZ,wBAAIoL,MAAOiK,EAAYjK,OACrB,iDACA,gCAEF,wBAAIA,MAAOoK,EAAcpK,OACvB,mDACA,iCAGJ,yBAAKpL,UAAU,aACb,uBACEiJ,OAAO,SACPkF,IAAI,sBACJjO,KAAMmV,EAAYnV,KAClByV,cAAY,UACZC,iBAAe,MACf7V,MAAOsV,EAAYtV,MACnBqL,MAAOiK,EAAYjK,OAEnB,yBAAKhL,IAAKiV,EAAYnC,IAAK7S,IAAKgV,EAAYtV,SAE9C,uBACEkJ,OAAO,SACPkF,IAAI,sBACJjO,KAAMqV,EAASrV,KACfyV,cAAY,UACZC,iBAAe,MACf7V,MAAOwV,EAASxV,MAChBqL,MAAOmK,EAASnK,OAEhB,yBAAKhL,IAAKmV,EAASrC,IAAK7S,IAAKkV,EAASxV,SAExC,uBACEkJ,OAAO,SACPkF,IAAI,sBACJjO,KAAMsV,EAActV,KACpByV,cAAY,UACZC,iBAAe,MACf7V,MAAOyV,EAAczV,MACrBqL,MAAOoK,EAAcpK,OAErB,yBAAKhL,IAAKoV,EAActC,IAAK7S,IAAKmV,EAAczV,UAGpD,wBAAIC,UAAU,SACZ,4BACE,+BACA,6BACE,+BACE,sCAIN,4BACE,+BACA,6BACE,+BACE,sCAIN,4BACE,+BACA,6BACE,+BACE,qCAIN,4BACE,+BACA,6BACE,+BACE,wCAQZ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,aACZ,iDACoB,kBAAC,GAAD,CAAY9C,OAAQuY,IADxC,MAC8D,IAC3DA,EAAe9S,MAFlB,aAIG+S,EAAsB5V,UACvB,2DAC+B,IAC7B,kBAAC,GAAD,CAAY5C,OAAQwY,IAFtB,MAEmD,IACjD,kBAAC,GAAD,CAAU1X,KAAM0X,EAAsB1X,OAHxC,KAMF,0DAC8B6W,EAD9B,WAGCH,EAAmBhO,OAAS,GAC3B,wCAEE,yBAAK1G,UAAU,gCACb,yBAAKA,UAAU,aACb,0CAEF,yBAAKA,UAAU,aACb,6CAEF,yBAAKA,UAAU,aACb,6CAEF,yBAAKA,UAAU,aACb,yCAEF,yBAAKA,UAAU,aACb,2CAED0U,EAAmBrI,KAAI,SAACwJ,EAAK3R,GAAN,OACtB,oCACE,yBACElE,UAAU,YACVkM,IAAK2J,EAAIpX,SAASL,GAAK,QACvBgN,MAAO,CACL0K,WACE5R,EAAQ,IAAM,EACV,kBACA,gBAGP2R,EAAIlT,OAEP,yBACE3C,UAAU,uBACVkM,IAAK2J,EAAIpX,SAASL,GAAK,UACvBgN,MAAO,CACL0K,WACE5R,EAAQ,IAAM,EACV,kBACA,iBAGL,IAAM2R,EAAI1B,KAAQ0B,EAAI1B,IAAM0B,EAAIzB,OAAOU,QAAQ,GAVpD,KAYA,yBACE9U,UAAU,YACVkM,IAAK2J,EAAIpX,SAASL,GAAK,OACvBgN,MAAO,CACL0K,WACE5R,EAAQ,IAAM,EACV,kBACA,gBAGR,kBAAC,GAAD,CAAYhH,OAAQ2Y,EAAIpX,YAE1B,yBACEuB,UAAU,YACVkM,IAAK2J,EAAIpX,SAASL,GAAK,OACvBgN,MAAO,CACL0K,WACE5R,EAAQ,IAAM,EACV,kBACA,gBAGP2R,EAAI1B,KAEP,yBACEnU,UAAU,YACVkM,IAAK2J,EAAIpX,SAASL,GAAK,SACvBgN,MAAO,CACL0K,WACE5R,EAAQ,IAAM,EACV,kBACA,gBAGP2R,EAAIzB,gBA/LI,6BAASpU,UAAU,oB,GAxJ1BM,aC4NbyV,I,kNAtNblN,MAAQ,CACN8H,mBAAoB,CAClBjC,gBAAiB,cACjBkC,WAAW,EACXjC,UAAW,CAAEC,IAAK,IAClBC,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CE,OAAQ,CACNU,SAAU,EACVT,SAAU,SACVC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,KAGd0B,MAAO,CACL5B,UAAW,CAAE3L,MAAO,UAAW4L,SAAU,SAAUC,SAAU,KAE/D2B,MAAO,CACL7B,UAAW,CAAE3L,MAAO,UAAW4L,SAAU,SAAUC,SAAU,O,EAKnE6G,gBAAkB,SAACC,EAAgB/Y,GACjC,IAAIgZ,EACAC,EAAa,IAAIjX,KACrBiX,EAAWtO,SAAS,EAAG,EAAG,EAAG,GAE7B,IAL4C,EAKxCuO,EAAc,EAEdC,EAAgB,CAAEC,OAAQ,GAC1BC,EAAgB,CAAED,OAAQ,GAE1BE,EAAuB,EACzBC,EAAoB,EAElBC,EAAa,CAAEC,KAAM,GAErBC,EAAc,CAAE5Y,KAAM,KAAMuR,SAAU,GAfE,cAiB3B0G,GAjB2B,IAiB5C,2BAAiC,CAAC,IAAzBjY,EAAwB,QACzBiT,EAAQlT,EAAYC,EAAMd,EAAOkB,IAcvC,GAXI6S,GACFsF,EAAcD,SACdC,EAAczO,MAAQ9J,EAEjBuY,EAAc3T,MAAK2T,EAAc3T,IAAM5E,GAExCuY,EAAcD,OAASD,EAAcC,SACvCD,EAAgBE,IACbA,EAAgB,CAAED,OAAQ,GAG7BrF,EAAO,CAAC,IACFxS,EAAaD,EAAyBR,EAAMd,EAAOkB,IAAnDK,SACR,IAAK+G,MAAMxH,EAAKuH,QAAQE,MAAM,KAAK,IAAK,CACtC,IAAMoR,EAAY1F,WAAWnT,EAAKuH,QAAQE,MAAM,KAAK,IACjDoR,EAAYH,EAAWC,OACzBD,EAAa,CACX1Y,KAAMA,EACNS,SAAUA,EACVkY,KAAME,UAMTT,IAGL,IAAIU,EAAU,IAAI5X,KAAKlB,EAAKoG,OAe5B,GAdA0S,EAAQjP,SAAS,EAAG,EAAG,EAAG,GACyB,IAA/C/I,EAAsBqX,EAAYW,IACpCX,EAAaW,EACbL,EAAoB,GAEpBA,IAGEA,EAAoBD,IACtBN,EAAgBC,EAChBK,EAAuBC,GAIrBzY,EAAKoG,OAASpG,EAAK+Y,QAAS,CAC9B,IAAMC,EAAezD,KAClBhE,SAASgE,KAAOvV,EAAKoG,OAAOuS,KAAKpD,KAAOvV,EAAK+Y,WAC7CE,iBACCD,EAAeJ,EAAYrH,WAC7BqH,EAAc,CACZ5Y,OACAuR,SAAUyH,MAvE0B,8BA6E5C,IAAIE,EAAc,IAAIhY,KAAKhC,EAAOuL,kBAElC,GAAIwN,EAAevP,OAAQ,CACzB,IAAIyQ,EAAgB,IAAIjY,KACtB+W,EAAeA,EAAevP,OAAS,GAAGqQ,SAExCI,EAAgBD,IAAaA,EAAcC,GAGjD,IAAIC,EAAc,EAClB,GAAInB,EAAevP,OAAQ,CACzB,IAAI2Q,EAAkB,IAAInY,KACxB+W,EAAeA,EAAevP,OAAS,GAAGqQ,SAExCO,EAAiBxY,EAAsB,IAAII,KAAQmY,GACvDD,EAAcnB,EAAevP,OAASyK,WAAWmG,GAanD,MAAO,CACLJ,cACAE,cACAf,gBACAH,gBACAM,uBACAE,aACAa,kBAjBwBtB,EACvBhS,QAAO,SAACjG,GAAD,OAA8B,OAApBA,EAAKiF,cACtBqO,QAAO,SAAC1G,EAAQ5M,GAKf,OAJyC,IAArC4M,EAAO4M,QAAQxZ,EAAKiF,aACtB2H,EAAOtD,KAAKtJ,EAAKiF,YAGZ2H,IACN,IAAIlE,OAUP0P,cACAQ,YAAaA,EAAY5Y,O,uDAInB,IAAD,EACmB4B,KAAKC,MAAvB8C,EADD,EACCA,MAAOzF,EADR,EACQA,OADR,EAYH0C,KAAKoW,gBAAgBrT,EAAOzF,GAT9Bga,EAHK,EAGLA,YACAE,EAJK,EAILA,YACAf,EALK,EAKLA,cACAH,EANK,EAMLA,cACAM,EAPK,EAOLA,qBACAE,EARK,EAQLA,WACAN,EATK,EASLA,YACAmB,EAVK,EAULA,kBACAX,EAXK,EAWLA,YAGIa,EAAwBpB,EAAczT,IAC1C,wCACS,kBAAC,GAAD,CAAU5E,KAAMqY,EAAcvO,QADvC,MACoD,IAClD,kBAAC,GAAD,CAAU9J,KAAMqY,EAAczT,OAGhC,GAEI8U,EAAoBhB,EAAW1Y,MACnC,4CACgB0Y,EAAWC,KAD3B,0BACwD,IACtD,kBAAC,GAAD,CAAYzZ,OAAQwZ,EAAWjY,WAFjC,MAEiD,IAC/C,kBAAC,GAAD,CAAUT,KAAM0Y,EAAW1Y,OAH7B,KAMF,OACE,6BAASgC,UAAU,eACjB,wBAAI5B,GAAIwB,KAAKC,MAAMzB,GAAI4B,UAAU,eAC9BJ,KAAKC,MAAME,OAEd,wBAAIC,UAAU,aACZ,6CAAmBuT,KAAO2D,GAAa1D,OAAO,gBAA9C,KACA,qCAAW4D,EAAYtC,QAAQ,GAA/B,8BACA,gDACoBvB,KAAO2C,GAAe1C,OAAO,gBADjD,QACuE,IACpEgD,EAFH,oBAIA,yCAAee,EAAf,iBACA,mDACuBlB,EAAcC,OADrC,iBAEGmB,EAFH,KAICC,EACAd,GACC,6CACgB,kBAAC,GAAD,CAAU5Y,KAAM4Y,IADhC,WACwD,IACrDrD,KAAOoE,YAAYf,EAAYxS,MAAOwS,EAAYG,UAGtDX,GAAe,IACd,+CACmB,IACjB,uBACEnN,OAAO,SACPkF,IAAI,+BACJjO,KAAK,wEAHP,qCAFF,W,GA5MYI,c,0DCIlBG,GAAU,IAAIvB,KAAK,cAAcM,UACjCkB,GAAU,IAAIxB,KAEd0Y,G,4MAcJ/O,MAAQ,CACNgP,UAAU,G,EAGZC,kBAAoB,SAAC/O,GACnB,IAAMmC,EAAOnC,EAAME,OAAOiC,KACpBhC,EAAQ6O,MAAMC,KAAKzO,SAAS0O,iBAAT,sBAAyC/M,EAAzC,QACtBjH,QAAO,SAACiU,GAAD,OAAWA,EAAMC,WACxB9L,KAAI,SAAC6L,GAAD,OAAWA,EAAMhP,SACxB,EAAKkP,gBAAL,gBACGlN,EAAOhC,K,EAIZmP,gBAAkB,SAACtP,GACjB,IAAMmC,EAAOnC,EAAME,OAAOiC,KACpBhC,EAAQH,EAAME,OAAOkP,QAC3B,EAAKC,gBAAL,gBACGlN,EAAOhC,K,EAIZoP,cAAgB,SAACpN,EAAMqN,GACrB,IAAMpU,EAAOoU,EAAM,GACnB,EAAKH,gBAAL,gBAAwBlN,EAAO/G,K,EAGjCiU,gBAAkB,SAACI,GAAa,IAAD,EAWzB,EAAK3Y,MATPmD,EAF2B,EAE3BA,OACAC,EAH2B,EAG3BA,WACAC,EAJ2B,EAI3BA,UACAC,EAL2B,EAK3BA,aACAE,EAN2B,EAM3BA,SACAC,EAP2B,EAO3BA,MACAR,EAR2B,EAQ3BA,UACAC,EAT2B,EAS3BA,QACAK,EAV2B,EAU3BA,WAGF,EAAKvD,MAAM4Y,YAAX,aACEzV,SACAC,aACAC,YACAC,eACAE,WACAC,QACAF,aACAL,UACAD,aACG0V,K,EAIPE,oBAAsB,SAACC,EAAa7X,EAAQoK,GAAtB,IAA4B0N,EAA5B,+DACpBA,EACE,yBAAK5Y,UAAU,gCACb,yBAAKA,UAAU,OACZ2Y,EAAYtM,KAAI,SAACxD,EAAO3E,GAAR,OACf,yBAAKlE,UAAU,QAAQkM,IAAKhI,GACzB,EAAK2U,eAAe/X,EAAQoK,EAAMrC,EAAO3E,SAMlD,yBAAKlE,UAAU,gCACZ2Y,EAAYtM,KAAI,SAACxD,EAAO3E,GAAR,OACf,EAAK2U,eAAe/X,EAAQoK,EAAMrC,EAAO3E,Q,EAIjD2U,eAAiB,SAAC/X,EAAQoK,EAAMrC,EAAO3E,GAAtB,OACf,yBAAKlE,UAAU,aAAakM,IAAKhI,GAC/B,2BACEgH,KAAMA,EACNlL,UAAU,mBACV2F,KAAK,WACLvH,GAAE,UAAK8M,EAAL,YAAahH,GACfgF,MAAOL,EACPiQ,eAAgBhY,EAAO8D,SAASiE,GAChCoC,SAAU,EAAK6M,oBAEjB,2BAAO9X,UAAU,mBAAmB+Y,QAAO,UAAK7N,EAAL,YAAahH,IACrD2E,K,uDAKG,IAAD,SASHjJ,KAAKC,MAPPmD,EAFK,EAELA,OACAC,EAHK,EAGLA,WACAC,EAJK,EAILA,UACAC,EALK,EAKLA,aACAE,EANK,EAMLA,SACAC,EAPK,EAOLA,MACAF,EARK,EAQLA,WAGF,OACE,oCACE,kBAAC4V,GAAA,EAAD,CACE1V,MAAM,YACNtD,UAAU,OACVsL,QAAS,kBAAM,EAAKtC,SAAS,CAAE6O,UAAW,EAAKhP,MAAMgP,aAHvD,WAKWjY,KAAKiJ,MAAMgP,SAAW,IAAM,KAEvC,kBAACoB,GAAA,EAAD,CAAUC,OAAQtZ,KAAKiJ,MAAMgP,UAC3B,0BAAM7M,SAAU,SAACmB,GAAD,OAAOA,EAAE/C,kBAAkBpJ,UAAU,OACnD,yBAAKA,UAAU,UACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gCACb,8DACA,kBAAC,KAAD,CACEkJ,MAAOtJ,KAAKC,MAAMiD,WAAa,GAC/B9C,UAAU,+BACVkL,KAAK,YACLD,SAAU,SAACsN,GAAD,OAAW,EAAKD,cAAc,YAAaC,IACrDlI,QAAS,CACP8I,WAAY,SACZ1Y,QAASb,KAAKC,MAAMY,QACpBC,QAASd,KAAKC,MAAMa,QACpB0Y,YAAY,EACZC,eAAe,MAIrB,yBAAKrZ,UAAU,gCACb,2BAAOA,UAAU,cACf,2BACEkL,KAAK,eACLlL,UAAU,mBACV2F,KAAK,WACLvH,GAAG,gBACH8K,MAAM,eACN4P,eAAgBlZ,KAAKC,MAAM0D,aAC3B0H,SAAUrL,KAAKyY,kBAEjB,2BACErY,UAAU,mBACV+Y,QAAQ,iBAFV,wBAIEnZ,KAAKC,MAAM0D,aAAe,MAAQ,MAGrC3D,KAAKC,MAAM0D,cACV,kBAAC,KAAD,CACE2F,MAAOtJ,KAAKC,MAAMkD,SAAW,GAC7B/C,UAAU,+BACVkL,KAAK,UACLD,SAAU,SAACsN,GAAD,OAAW,EAAKD,cAAc,UAAWC,IACnDlI,QAAS,CACP8I,WAAY,SACZ1Y,QAASb,KAAKC,MAAMY,QACpBC,QAASd,KAAKC,MAAMa,QACpB0Y,YAAY,EACZC,eAAe,QAO1BzZ,KAAK8Y,oBAAoB/X,EAAaG,OAAQkC,EAAQ,UACtDpD,KAAK8Y,oBACJxX,EAAgBJ,OAChBoC,EACA,aACA,GAEDtD,KAAK8Y,oBACJnX,EAAmBT,OACnBqC,EACA,gBAEDvD,KAAK8Y,oBACJxW,EAAepB,OACfuC,EACA,YAEDzD,KAAK8Y,oBAAoB3W,EAAYjB,OAAQwC,EAAO,SACpD1D,KAAK8Y,oBAAoB/W,EAAiBb,OAAQsC,EAAY,cAC9DxD,KAAK8Y,oBACJ3X,EAAiBD,OACjBmC,EACA,qB,GAzMYqW,iBA0NX/Y,gBATc,SAAC,GAAD,IAAGsC,EAAH,EAAGA,WAAYF,EAAf,EAAeA,MAAf,mBAAC,eACzBE,GADwB,IAE3BpC,QAASkC,EAAMmF,OAASrH,GACxBC,QAASiC,EAAMC,KAAOlC,QAEG,SAAC8B,GAAD,MAAe,CACxCiW,YAAa,SAAClW,GAAD,OAAaC,EAASF,EAAiBC,QAGvChC,CAAkDqX,ICnFlD2B,G,4MAvIb1Q,MAAQ,CACN2Q,wBAAyB,CACvB9K,gBAAiB,cACjBC,UAAW,CAAEC,IAAK,GAAI6B,KAAM,GAAIC,MAAO,GACvC7B,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CE,OAAQ,CACNC,SAAU,SACVC,UAAW,CACT3L,MAAO,UACP4L,SAAU,SACVC,SAAU,KAGdsK,OAAQ,CACN,CAAE9T,KAAM,QACR,CAAEA,KAAM,UAAW+T,WAAY,CAAE/T,KAAM,WAAYgU,SAAU,MAC7D,CAAEhU,KAAM,UAAW+T,WAAY,CAAE/T,KAAM,cAEzCkL,MAAO,CACL5B,UAAW,CAAE3L,MAAO,UAAW4L,SAAU,SAAUC,SAAU,IAC7DyK,UAAW,CACTtW,MAAO,eAETkQ,OAAQ,YAEV1C,MAAO,CACL7B,UAAW,CAAE3L,MAAO,UAAW4L,SAAU,SAAUC,SAAU,IAC7DyK,UAAW,CAAErS,MAAO,IAEtBsS,QAAS,CACPC,QAAQ,EACRC,QAAS,e,EAKfC,mBAAqB,SAACrX,EAAOzF,EAAQ+c,GACnC,IAAIC,EAAoB,IAEpBD,GAAqBtX,EAAM+D,OAAS,IACtCwT,EAAkB5S,KAAK,CACrBnD,KAAM,IAAIjF,KACVib,aAAcxc,EAAgBT,KANuB,oBAUtCyF,GAVsC,IAUzD,2BAA0B,CAAC,IAAhB3E,EAAe,QAClBiT,EAAQlT,EAAYC,EAAMd,EAAOkB,IADf,EAKpBM,EAAmCV,EAAMd,EAAOkB,IAFlDO,EAHsB,EAGtBA,iBACAE,EAJsB,EAItBA,mBAEFqb,EAAkB5S,KAAK,CACrB8S,QAASpc,EAAKE,QAAQC,MAAMC,KAAOlB,EAAOkB,GAC1C6S,QACA9M,KAAM,IAAIjF,KAAKlB,EAAKoG,OACpB+V,aAAcxc,EAAgBgB,GAC9B0b,eAAgB1c,EAAgBkB,GAChCyb,OAAQtc,EAAKI,MAtBwC,8BAyBzD,OAAO8b,G,EAGTK,mBAAqB,gBACnBH,EADmB,EACnBA,QACAnJ,EAFmB,EAEnBA,MACA9M,EAHmB,EAGnBA,KACAgW,EAJmB,EAInBA,aACAE,EALmB,EAKnBA,eACAC,EANmB,EAMnBA,OANmB,OAQnBD,EAAc,wBACOpJ,EAAQ,aAAe,WAD9B,mBAERqE,GAAQrC,SAFA,gBAGFqH,EAHE,+DAG2D/G,KACnEpP,GACAqP,OAAO,qBALC,cAKyBvC,EAAQ,MAAQ,OALzC,iEAOVmJ,EAAU,kBAAoB,kBAPpB,iCAQa9c,KAAKkd,MAAML,GARxB,aAQ0Crc,EAClDqc,GATQ,+DAYVC,EAAU,kBAAoB,kBAZpB,mCAae9c,KAAKkd,MAAMH,GAb1B,aAa8Cvc,EACtDuc,GAdQ,mEAiBU/c,KAAKkd,MAAML,GAjBrB,aAiBuCrc,EAC/Cqc,GAlBQ,Y,uDAqBN,IAAD,SACsCva,KAAKC,MAA1C8C,EADD,EACCA,MAAOzF,EADR,EACQA,OAAQ+c,EADhB,EACgBA,kBAEjBC,EAAoBta,KAAKoa,mBAC7BrX,EACAzF,EACA+c,GAGIQ,EAAS,CACb,CACE,OACA,CAAE9U,KAAM,SAAU+U,MAAO,iBACzB,CAAE/U,KAAM,SAAUgV,KAAM,UAAWC,EAAG,CAAEC,MAAM,IAC9C,CAAElV,KAAM,SAAU+U,MAAO,0BACzB,CAAE/U,KAAM,SAAUgV,KAAM,UAAWC,EAAG,CAAEC,MAAM,IAC9C,CAAElV,KAAM,SAAU+U,MAAO,yBACzB,CAAE/U,KAAM,SAAUgV,KAAM,UAAWC,EAAG,CAAEC,MAAM,MARnC,mBAUVX,EAAkB7N,KAAI,SAACyO,GAAD,MAAU,CACjCA,EAAK3W,KACL2W,EAAKX,aACL,EAAKI,mBAAmBO,GACxBA,EAAK7J,MAAQ,KAAO6J,EAAKT,eACzB,EAAKE,mBAAmBO,GACxBA,EAAK7J,MAAQ6J,EAAKT,eAAiB,KACnC,EAAKE,mBAAmBO,SAI5B,OACE,kBAAC,KAAD,CACE1K,UAAU,aACVnJ,KAAMwT,EACNpK,QAASzQ,KAAKiJ,MAAM2Q,wBACpBzU,MAAO,OACPC,OAAQ,c,GAxIe1E,aCDzBya,G,uKAOM,IAAD,EAC+Bnb,KAAKC,MAAnC3C,EADD,EACCA,OAAQ2F,EADT,EACSA,WAAYF,EADrB,EACqBA,MAEtBqY,EAAoBnY,EAAWmB,QAC/BiX,EAAetY,EAAMqB,QAE3B,OACE,6BACE,kBAAC,GAAD,MAEA,6BACA,wBAAI5F,GAAG,oBAAoB4B,UAAU,eAArC,UACMgb,EAAkBtU,OADxB,eACqCuU,EAAavU,OADlD,6BAICsU,EAAkBtU,OAAS,GAC1B,6BACE,kBAAC,GAAD,CACE/D,MAAOqY,EACP9d,OAAQA,EACR+c,mBAAoBpX,EAAWU,eAGjC,kBAAC,GAAD,CAAcZ,MAAOqY,EAAmB9d,OAAQA,IAEhD,kBAAC,GAAD,CACE6C,MAAK,4BACL3B,GAAI,eACJuE,MAAOqY,EACP9d,OAAQA,IAET2F,EAAWK,UAAUwD,OAAS,GAC7B,kBAAC,GAAD,CACE3G,MAAK,iCACL3B,GAAI,oBACJuE,MAAOqY,EACP9d,OAAQA,IAGX2F,EAAWM,aAAauD,OAAS,GAChC,kBAAC,GAAD,CACE3G,MAAK,mCACL3B,GAAI,sBACJuE,MAAOqY,EACP9d,OAAQA,IAGZ,kBAAC,GAAD,CACE6C,MAAK,yBACL3B,GAAI,kBACJuE,MAAOqY,EACP9d,OAAQA,IAEV,kBAAC,GAAD,CACE6C,MAAK,gBACL3B,GAAI,aACJuE,MAAOqY,EACP9d,OAAQA,U,GAhEEoD,aA8ETC,gBANc,SAAC,GAAD,MAAoC,CAC/DsC,WAD2B,EAAGA,WAE9BF,MAF2B,EAAeA,MAG1CzF,OAH2B,EAAsBA,UAMpCqD,CAA8Bwa,ICzE9BG,GAhBA,kBACb,4BAAQlb,UAAU,UAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,2BAAG,+DAAoC,uBAAGiJ,OAAO,SAASkF,IAAI,+BAA+BjO,KAAK,6BAA3D,OAApC,8BACH,2BAAG,oEAAyC,uBAAGA,KAAK,oCAAoC+I,OAAO,SAASkF,IAAI,gCAAhE,UAAzC,OAEL,yBAAKnO,UAAU,uBACb,uBAAGE,KAAK,yBAAyB+I,OAAO,SAASkF,IAAI,uBAArD,yBCCJgN,G,2KASS/c,GACXmL,SAASgC,eAAenN,GAAIgd,mB,0CAIxBxb,KAAKC,MAAMwb,MACbzb,KAAKC,MAAMyJ,cAAc1J,KAAKC,MAAMwb,Q,+BAKtC,OACE,0BAAMrb,UAAU,OACd,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,CAAS+L,aAAcnM,KAAKmM,eAC5B,yBAAK/L,UAAU,gDACZJ,KAAKC,MAAMyb,eACV,kBAAC,GAAD,MACE1b,KAAKC,MAAM0b,YACb,kBAAC,GAAD,MAEA,kBAAC,EAAD,SAKR,kBAAC,GAAD,W,GArCiBjb,aAyDVC,gBAdc,SAAC,GAAD,IAAGrD,EAAH,EAAGA,OAAQyF,EAAX,EAAWA,MAAX,MAAwB,CACnDzF,SACAqe,cACIre,EAAOqJ,YACPrJ,EAAOmR,cACP1L,EAAM4D,YACN5D,EAAM0L,WACViN,eAAgBpe,EAAOkB,IAAM,GAAKuE,EAAMqB,QAAQ0C,OAAS,MAG3B,SAAClE,GAAD,MAAe,CAC7C8G,cAAe,SAACpM,GAAD,OAAYsF,EAASuF,GAAY7K,QAGnCqD,CAGb4a,I,SC1DaK,GATH,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACV,kBAAC,IAAD,CAAeC,MAAOD,GACpB,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,cAAcC,UAAW,gBAAGC,EAAH,EAAGA,MAAH,OAAgB,kBAAC,GAAD,CAAYR,KAAMQ,EAAMC,OAAOT,UACpF,kBAAC,IAAD,CAAOU,OAAK,EAACJ,KAAK,IAAIC,UAAWT,QCGnBa,QACW,cAA7B9R,OAAO+R,SAASC,UAEe,UAA7BhS,OAAO+R,SAASC,UAEhBhS,OAAO+R,SAASC,SAASL,MACvB,2D,+BCdAM,GAAe,CACnB/d,IAAK,EACL0B,SAAU,GACV1C,QAAS,CACPC,QAAS,CACPF,OAAQ,IAGZH,KAAM,EACNuJ,SAAU,KACV8H,WAAY,GACZ5F,iBAAkB,MA2BL2T,GAxBC,WAA8C,IAA7CvT,EAA4C,uDAApCsT,GAAoC,yCAApBxW,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7C,OAAQD,GACN,KAAKE,EtBhBmB,gBsBgBI,OAAO,2BAC9BsW,IADuB,IAE1B5V,SAAUX,EACVyI,WAAY,KAGd,KAAKvI,GtBtBmB,gBsBsBI,OAAO,2BAC9B+C,GADuB,IAE1BtC,SAAU,MACPX,GAGL,KAAKG,GtB5BmB,gBsB4BI,OAAO,2BAC9B8C,GADuB,IAE1BtC,SAAU,KACV8H,WAAYzI,EAAQ+B,QAGtB,QAAS,OAAOkB,IC9BdsT,GAAe,CACnBnY,QAAS,GACTuC,SAAU,KACVK,aAAc,EACdC,kBAAmB,EACnBwH,WAAY,GACZvG,MAAOrH,EACPmC,IAAKlC,GAgDQ0b,GA7CC,WAA8C,IAA7CvT,EAA4C,uDAApCsT,GAAoC,yCAApBxW,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7C,OAAQD,GACN,KAAKE,EvBhBmB,gBuBiBtB,OAAO,2BACFsW,IADL,IAEE5V,SAAUsC,EAAMtC,WAGpB,KAAKV,EAAQI,IACX,OAAO,2BACF4C,GADL,IAEEtC,SAAUX,EACVgB,aAAc,EACdC,kBAAmB,EACnBwH,WAAY,GACZrK,QAAS,GACT8D,MAAOrH,EACPmC,IAAKlC,IAGT,KAAKsF,GAASC,IACZ,OAAO,2BACF4C,GACAjD,GAGP,KAAKE,GAAQG,IACX,OAAO,2BACF4C,GADL,IAEEtC,SAAU,MACPX,GAGP,KAAKG,GAAQE,IACX,OAAO,2BACF4C,GADL,IAEEtC,SAAU,KACV8H,WAAYzI,EAAQ+B,QAGxB,QACE,OAAOkB,IC1CPsT,GAAe,CACnBrZ,UAAWrC,EACXsC,QAASrC,EACTsC,OAAQrC,EAAaG,OACrBmC,WAAYlC,EAAiBD,OAC7BoC,UAAWhC,EAAgBJ,OAC3BqC,aAAc5B,EAAmBT,OACjCuC,SAAUnB,EAAepB,OACzBwC,MAAOvB,EAAYjB,OACnBsC,WAAYzB,EAAiBb,OAC7ByC,cAAc,EACdS,QAAS,IA2BIoY,GAxBC,WAA8C,IAA7CvT,EAA4C,uDAApCsT,GAAoC,yCAApBxW,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7C,OAAQD,GACN,I3BzBoC,2B2B0BlC,OAAO,2BACFkD,GACAjD,GAGP,KAAKC,EAAQI,IACb,KAAKJ,ExBpCmB,gBwBqCtB,OAAO,eACFsW,IAGP,KAAKrW,GAAQG,IACX,OAAO,2BACF4C,GADL,IAEE/F,UAAW8C,EAAQkC,QAEvB,QACE,OAAOe,I,wCCMElC,GArDA,CACbsB,YAAa,SAACoT,GACZ,OAAO,IAAIgB,MAAkB,SAACC,EAASC,GACjC/W,MAAM6V,GACRmB,KAAMC,IAAN,UAAanH,GAAQnC,aAArB,qBAA8CkI,IAC3CqB,MAAK,SAAAC,GAAG,OAAIA,EAAI1V,QAChByV,MAAK,SAAUzV,GACVA,EAAKjD,QAAQ0C,OAAS,EACxB4V,EAAQrV,EAAKjD,QAAQ,GAAG5F,IAGxBme,EAAO,gIAGVK,OAAM,SAAUnf,GACf8e,EAAO,+CAAD,OAAgD9e,EAAIof,OAApD,gGAIVP,EAAQjB,OAKdhT,kBAAmB,SAACjK,GAClB,OAAO,IAAIie,MAAkB,SAACC,EAASC,GACrCC,KAAMC,IAAN,UAAanH,GAAQnC,cAArB,OAAoC/U,IACjCse,MAAK,SAAAC,GAAG,OAAIA,EAAI1V,QAChByV,MAAK,SAAUzV,GACdqV,EAAQrV,MAET2V,OAAM,SAAUnf,GACf8e,EAAO,+CAAD,OAAgD9e,EAAIof,OAApD,oGAKd7V,cAAe,SAAC/I,EAAU6e,GAGxB,YAFY3V,IAAR2V,IAAmBA,EAAG,UAAMxH,GAAQnC,cAAd,OAA6BlV,EAA7B,4EAEnB,IAAIoe,MAAkB,SAACC,EAASC,GACrCC,KAAMC,IAAIK,GACPJ,MAAK,SAAAC,GAAG,OAAIA,EAAI1V,QAChByV,MAAK,SAAUzV,GACdqV,EAAQrV,MAET2V,OAAM,SAAUnf,GACf8e,EAAO9e,WC7CF2e,GAFC,eAACvT,EAAD,uDAASlC,GAAT,yCAAmBhB,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,QAAzB,MAFY,iBAE2BD,EAAwBC,EAAUiD,GCE1EkU,8BAAgB,CAC7BpW,OAAQqW,GACR9f,OAAQ+f,GACRta,MAAOua,GACPra,WAAYsa,KCAR1B,GCHG2B,uBACLC,GACAC,+BACEC,2BAAgBC,QDEtBC,IAASC,OACP,kBAAC,GAAD,CAAKjC,WAAYA,KACjBlS,SAASgC,eAAe,SPmHpB,kBAAmBoS,WACrBA,UAAUC,cAAcC,MAAMnB,MAAK,SAAAoB,GACjCA,EAAaC,iB","file":"static/js/main.73f31854.chunk.js","sourcesContent":["const rankNumberToKyuDan = (rank) => {\r\n  if (rank < 30) return 30 - rank + \"k\";\r\n  else return rank - 29 + \"d\";\r\n};\r\n\r\nexport const getPlayerRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating;\r\n    var rank = Math.floor(ratingToRank(rating));\r\n    return rank;\r\n  } catch (err) {\r\n    return player.ranking;\r\n  }\r\n};\r\n\r\nexport const getPlayerUnroundedRank = (player) => {\r\n  try {\r\n    const rating = player.ratings.overall.rating;\r\n    var rank = ratingToRank(rating);\r\n    return rank;\r\n  } catch (err) {\r\n    return player.ranking;\r\n  }\r\n};\r\n\r\nexport const getPlayerRating = (player) => player.ratings.overall.rating;\r\n\r\nexport const getPlayerRankDisplay = (player) => {\r\n  return rankNumberToKyuDan(getPlayerRank(player));\r\n};\r\n\r\nexport const ratingToRank = (rating) => Math.log(rating / 525) * 23.15;\r\n\r\nexport const ratingToKyuDan = (rating) => {\r\n  var rank = Math.floor(ratingToRank(rating));\r\n  return rankNumberToKyuDan(rank);\r\n};\r\n\r\nexport const getGameBoardSize = (game) => {\r\n  if (game.width === 19 && game.height === 19) return \"19x19\";\r\n  else if (game.width === 13 && game.height === 13) return \"13x13\";\r\n  else if (game.width === 9 && game.height === 9) return \"9x9\";\r\n  else return \"Others\";\r\n};\r\n\r\nexport const getGameTimeSettings = (game) => {\r\n  if (game.time_per_move < 20) return \"Blitz\";\r\n  else if (game.time_per_move > 10800) return \"Correspondence\";\r\n  else return \"Live\";\r\n};\r\n\r\nexport const getGameHandicapState = (game, playerId) => {\r\n  if (game.handicap === 0) return \"Even game\";\r\n  else if (game.players.black.id === playerId) return \"Handicap taker\";\r\n  else return \"Handicap giver\";\r\n};\r\n\r\nexport const isPlayerWin = (game, playerId) => {\r\n  return (\r\n    (game.players.black.id === playerId && game.white_lost) ||\r\n    (game.players.white.id === playerId && game.black_lost)\r\n  );\r\n};\r\n\r\nexport const extractPlayerAndOpponent = (game, playerId) => {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n        player: game.players.black,\r\n        opponent: game.players.white,\r\n      }\r\n    : {\r\n        player: game.players.white,\r\n        opponent: game.players.black,\r\n      };\r\n};\r\n\r\nexport const extractHistoricalPlayerAndOpponent = (game, playerId) => {\r\n  return game.players.black.id === playerId\r\n    ? {\r\n        historicalPlayer: game.historical_ratings.black,\r\n        historicalOpponent: game.historical_ratings.white,\r\n      }\r\n    : {\r\n        historicalPlayer: game.historical_ratings.white,\r\n        historicalOpponent: game.historical_ratings.black,\r\n      };\r\n};\r\n\r\nexport const daysDifferenceBetween = (day1, day2) => {\r\n  /* Copa pasta I don't even know if there's any bug here */\r\n\r\n  // Copy date parts of the timestamps, discarding the time parts.\r\n  var two = new Date(day1.getFullYear(), day1.getMonth(), day1.getDate());\r\n  var one = new Date(day2.getFullYear(), day2.getMonth(), day2.getDate());\r\n\r\n  // Do the math.\r\n  var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n  var millisBetween = two.getTime() - one.getTime();\r\n  var days = millisBetween / millisecondsPerDay;\r\n\r\n  // Round down.\r\n  return two > one ? Math.floor(days) : Math.ceil(days);\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getPlayerRankDisplay } from \"../../Shared/utils\";\r\n\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    player: PropTypes.shape({\r\n      username: PropTypes.string,\r\n      rank: PropTypes.number\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const pageTitle = this.props.player.username ? `statistics for player ${this.props.player.username} (${getPlayerRankDisplay(this.props.player)})` : \"statistics\";\r\n    const title = `${this.props.player.username && `${this.props.player.username} statistics | `}Got Stats?`\r\n    return (\r\n      <nav className=\"navbar navbar-dark Header justify-content-start\">\r\n        <Helmet>\r\n          <title>{title}</title>\r\n        </Helmet>\r\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\r\n          <img className=\"OGS_logo d-inline-block align-top\" src=\"https://cdn.online-go.com/assets/ogs_dark.svg\" alt=\"OGS logo\" />\r\n        </a>\r\n        <h1 className=\"page_title\">{pageTitle}</h1>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player }) => ({ player })\r\n\r\nexport default connect(mapReduxStateToProps)(Header);\r\n","import React from \"react\";\r\n\r\nconst Welcome = () => (\r\n  <div>\r\n    <h2>Welcome!</h2>\r\n    <p className=\"instruction\">\r\n      Start by entering username into the search field to the right\r\n      (case-sensitive).\r\n    </p>\r\n    <p>\r\n      You can also use userID: my profile page is{\" \"}\r\n      <em>https://online-go.com/user/view/999999</em>, meaning my user ID is\r\n      999999.\r\n    </p>\r\n    <hr />\r\n    <p>\r\n      If you play a lot of games, be sure to Export after querying finished.\r\n    </p>\r\n    <p>\r\n      It will save your games data into 1 file, which you can import later to\r\n      save time.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Welcome;\r\n","export const minDate = new Date(\"Jan 1 2008\");\r\nexport const maxDate = new Date();\r\n","import {\r\n  getGameBoardSize,\r\n  getGameTimeSettings,\r\n  getGameHandicapState,\r\n} from \"../../Shared/utils\";\r\n\r\nimport { maxDate } from \"../../Shared/constants\";\r\n\r\nexport const UPDATE_CHART_DATA_SOURCE = \"UPDATE_CHART_DATA_SOURCE\";\r\n\r\nexport const rankedValues = {\r\n  Ranked: \"Ranked\",\r\n  Unranked: \"Unranked\",\r\n  values: [\"Ranked\", \"Unranked\"],\r\n};\r\nexport const tournamentValues = {\r\n  Tournament: \"Tournament\",\r\n  NonTournament: \"Non-tournament\",\r\n  values: [\"Tournament\", \"Non-tournament\"],\r\n};\r\nexport const boardSizeValues = {\r\n  Nineteens: \"19x19\",\r\n  Thirteens: \"13x13\",\r\n  Nines: \"9x9\",\r\n  Others: \"Others\",\r\n  values: [\"19x19\", \"13x13\", \"9x9\", \"Others\"],\r\n};\r\nexport const timeSettingsValues = {\r\n  Blitz: \"Blitz\",\r\n  Live: \"Live\",\r\n  Correspondence: \"Correspondence\",\r\n  values: [\"Blitz\", \"Live\", \"Correspondence\"],\r\n};\r\nexport const resultTypeValues = {\r\n  Scoring: \"Scoring\",\r\n  Resignation: \"Resignation\",\r\n  Timeout: \"Timeout\",\r\n  Others: \"Others\",\r\n  values: [\"Scoring\", \"Resignation\", \"Timeout\", \"Others\"],\r\n};\r\nexport const colorValues = {\r\n  Black: \"Play as Black\",\r\n  White: \"Play as White\",\r\n  values: [\"Play as Black\", \"Play as White\"],\r\n};\r\nexport const handicapValues = {\r\n  Even: \"Even game\",\r\n  Taker: \"Handicap taker\",\r\n  Giver: \"Handicap giver\",\r\n  values: [\"Even game\", \"Handicap taker\", \"Handicap giver\"],\r\n};\r\n\r\nexport const applyGameFilters = (filters) => (dispatch, getState) => {\r\n  const playerId = getState().player.id;\r\n  const dateOfLastGame = getState().games.end;\r\n\r\n  const {\r\n    startDate,\r\n    endDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    resultType,\r\n    handicap,\r\n    color,\r\n    limitEndDate,\r\n  } = getState().chartsData;\r\n\r\n  const latestLimitEndDate =\r\n    filters && filters.hasOwnProperty(\"limitEndDate\")\r\n      ? filters.limitEndDate\r\n      : limitEndDate;\r\n  const latestEndDate =\r\n    filters && filters.hasOwnProperty(\"endDate\") ? filters.endDate : endDate;\r\n\r\n  const newEndDate = latestLimitEndDate\r\n    ? latestEndDate < dateOfLastGame\r\n      ? latestEndDate\r\n      : dateOfLastGame\r\n    : maxDate;\r\n\r\n  const filterFunctionParams = {\r\n    startDate,\r\n    ranked,\r\n    tournament,\r\n    boardSize,\r\n    timeSettings,\r\n    handicap,\r\n    color,\r\n    playerId,\r\n    limitEndDate,\r\n    resultType,\r\n    ...filters,\r\n    endDate: newEndDate,\r\n  };\r\n\r\n  const filterFunction = composeFilterFunction(filterFunctionParams);\r\n\r\n  dispatch(\r\n    updateChartDataSource({\r\n      ...filterFunctionParams,\r\n      results: getState().games.results.filter(filterFunction),\r\n    })\r\n  );\r\n};\r\n\r\nconst composeFilterFunction = ({\r\n  startDate,\r\n  endDate,\r\n  ranked,\r\n  tournament,\r\n  boardSize,\r\n  timeSettings,\r\n  handicap,\r\n  resultType,\r\n  color,\r\n  playerId,\r\n}) => (game, index) => {\r\n  const date = new Date(game.ended);\r\n  if (date < startDate || date > endDate) return false;\r\n\r\n  return (\r\n    gameSatisfyRankedRule(game, ranked) &&\r\n    gameSatisfyTournamentRule(game, tournament) &&\r\n    gameSatisfyBoardSizeRule(game, boardSize) &&\r\n    gameSatisfyTimeSettingsRule(game, timeSettings) &&\r\n    gameSatisfyHandicapRule(game, handicap, playerId) &&\r\n    gameSatisfyColorRule(game, color, playerId) &&\r\n    gameSatisfyResultTypeRule(game, resultType)\r\n  );\r\n};\r\n\r\nconst gameSatisfyRankedRule = (game, ranked) => {\r\n  if (game.ranked && !ranked.includes(rankedValues.Ranked)) return false;\r\n  if (!game.ranked && !ranked.includes(rankedValues.Unranked)) return false;\r\n  return true;\r\n};\r\n\r\nconst gameSatisfyTournamentRule = (game, tournament) => {\r\n  const isTournamentGame = game.tournament !== null;\r\n  if (isTournamentGame && !tournament.includes(tournamentValues.Tournament))\r\n    return false;\r\n  if (!isTournamentGame && !tournament.includes(tournamentValues.NonTournament))\r\n    return false;\r\n  return true;\r\n};\r\n\r\nconst gameSatisfyBoardSizeRule = (game, boardSize) => {\r\n  const gameSize = getGameBoardSize(game);\r\n  return boardSize.includes(gameSize);\r\n};\r\n\r\nconst gameSatisfyTimeSettingsRule = (game, timeSettings) => {\r\n  const gameTimeSettings = getGameTimeSettings(game);\r\n  return timeSettings.includes(gameTimeSettings);\r\n};\r\n\r\nconst gameSatisfyHandicapRule = (game, handicap, playerId) => {\r\n  const gameHandicapState = getGameHandicapState(game, playerId);\r\n  return handicap.includes(gameHandicapState);\r\n};\r\n\r\nconst gameSatisfyColorRule = (game, color, playerId) => {\r\n  if (game.players.black.id === playerId && !color.includes(colorValues.Black))\r\n    return false;\r\n  if (game.players.white.id === playerId && !color.includes(colorValues.White))\r\n    return false;\r\n  return true;\r\n};\r\n\r\nconst gameSatisfyResultTypeRule = (game, resultType) => {\r\n  if (game.outcome === \"Resignation\") {\r\n    if (resultType.includes(resultTypeValues.Resignation)) return true;\r\n  } else if (game.outcome === \"Timeout\") {\r\n    if (resultType.includes(resultTypeValues.Timeout)) return true;\r\n  } else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n    if (resultType.includes(resultTypeValues.Scoring)) return true;\r\n  } else {\r\n    if (resultType.includes(resultTypeValues.Others)) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst updateChartDataSource = (newData) => ({\r\n  type: UPDATE_CHART_DATA_SOURCE,\r\n  payload: newData,\r\n});\r\n","export const REQUEST = type => `${type}_PENDING`;\r\nexport const SUCCESS = type => `${type}_FULFILLED`;\r\nexport const FAILURE = type => `${type}_REJECTED`;\r\nexport const PROGRESS = type => `${type}_PROGRESS`;","import { applyGameFilters } from \"../Charts/chartActions\";\r\n\r\nimport { REQUEST, SUCCESS, FAILURE, PROGRESS } from \"../promiseUtils\";\r\nimport { minDate, maxDate } from \"../../Shared/constants\";\r\n\r\nexport const FETCH_GAMES = \"FETCH_GAMES\";\r\nexport const FETCH_GAMES_PROGRESS = \"FETCH_GAMES_PROGRESS\";\r\n\r\nexport const fetchGames = (playerId, cachedGames = []) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const reduxState = getState();\r\n\r\n  const fetchingPromise = reduxState.games.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  const latestId = cachedGames.length > 0 ? cachedGames[0].id : null;\r\n\r\n  const OGSApi = reduxState.OGSApi;\r\n\r\n  try {\r\n    let games = [];\r\n    let fetchingPage = 0;\r\n    let data;\r\n    let fetchingTotalPage = 0;\r\n    let shouldContinueFetching = true;\r\n    do {\r\n      const promise = OGSApi.fetchGamePage(\r\n        playerId,\r\n        data ? data.next : undefined\r\n      );\r\n      dispatch(\r\n        fetchingPage === 0\r\n          ? fetchGamesStart(promise)\r\n          : fetchGamesProgress({\r\n              promise,\r\n              fetchingPage,\r\n              fetchingTotalPage,\r\n              results: games,\r\n            })\r\n      );\r\n      dispatch(applyGameFilters());\r\n      data = await promise;\r\n      for (const game of data.results) {\r\n        if (game.id !== latestId) games.push(game);\r\n        else {\r\n          shouldContinueFetching = false;\r\n          games = [...games, ...cachedGames];\r\n          break;\r\n        }\r\n      }\r\n\r\n      fetchingPage++;\r\n      fetchingTotalPage = Math.ceil(data.count / 50);\r\n    } while (data.next && shouldContinueFetching);\r\n\r\n    dispatch(fetchGamesSuccess(dispatchStateFrom(games)));\r\n  } catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchGamesFailure(error));\r\n    else\r\n      dispatch(\r\n        fetchGamesFailure(\r\n          \"An error has occured while fetching user games. Please try again later.\"\r\n        )\r\n      );\r\n  }\r\n\r\n  dispatch(applyGameFilters());\r\n};\r\n\r\nconst dispatchStateFrom = (games) => {\r\n  let startDate = games.length\r\n    ? new Date(games[games.length - 1].ended)\r\n    : minDate;\r\n  startDate.setHours(0, 0, 0, 0);\r\n\r\n  return {\r\n    results: games,\r\n    start: startDate,\r\n    end: games.length ? new Date(games[0].ended) : maxDate,\r\n  };\r\n};\r\n\r\nconst fetchGamesStart = (promise) => ({\r\n  type: REQUEST(FETCH_GAMES),\r\n  payload: promise,\r\n});\r\n\r\nconst fetchGamesProgress = ({\r\n  promise,\r\n  fetchingPage,\r\n  fetchingTotalPage,\r\n  results,\r\n}) => ({\r\n  type: PROGRESS(FETCH_GAMES),\r\n  payload: { fetching: promise, fetchingPage, fetchingTotalPage, results },\r\n});\r\n\r\nconst fetchGamesSuccess = (data) => ({\r\n  type: SUCCESS(FETCH_GAMES),\r\n  payload: data,\r\n});\r\n\r\nconst fetchGamesFailure = (error) => ({\r\n  type: FAILURE(FETCH_GAMES),\r\n  payload: { error },\r\n});\r\n\r\nexport const freezeQuery = () => (dispatch, getState) => {\r\n  const games = getState().games.results;\r\n  console.log(\"aaa\");\r\n\r\n  if (games.length === 0) return;\r\n\r\n  let startDate = games.length\r\n    ? new Date(games[games.length - 1].ended)\r\n    : minDate;\r\n\r\n  startDate.setHours(0, 0, 0, 0);\r\n  dispatch(\r\n    applyGameFilters({\r\n      startDate,\r\n    })\r\n  );\r\n};\r\n","import { fetchGames } from \"../Games/gameActions\";\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from '../promiseUtils';\r\n\r\nexport const FETCH_PLAYER = \"FETCH_PLAYER\";\r\n\r\nexport const importPlayer = ({ player, games }) => (dispatch, getState) => {\r\n  const fetchingPromise = getState().player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  dispatch(fetchPlayerSuccess(player));\r\n  dispatch(fetchGames(player.id, games.results));\r\n}\r\n\r\nexport const fetchPlayer = (player) => async (dispatch, getState) => {\r\n  const reduxState = getState();\r\n  const fetchingPromise = reduxState.player.fetching;\r\n  if (fetchingPromise) fetchingPromise.cancel();\r\n\r\n  const OGSApi = reduxState.OGSApi;\r\n  try {\r\n    const userIdPromise = OGSApi.fetchUserId(player);\r\n    dispatch(fetchPlayerStart(userIdPromise));\r\n    const userId = await userIdPromise;\r\n\r\n    const userDataPromise = OGSApi.fetchUserDataById(userId);\r\n    dispatch(fetchPlayerStart(userDataPromise));\r\n    const userData = await userDataPromise;\r\n\r\n    dispatch(fetchGames(userData.id));\r\n\r\n    dispatch(fetchPlayerSuccess({\r\n      id: userData.id,\r\n      username: userData.username,\r\n      rank: parseInt(userData.ranking),\r\n      ratings: userData.ratings,\r\n      registrationDate: userData.registration_date\r\n    }));\r\n  }\r\n  catch (error) {\r\n    console.error(error);\r\n    if (typeof error === \"string\") dispatch(fetchPlayerFailure(error))\r\n    else dispatch(fetchPlayerFailure(\"An error has occured while fetching user info. Please try again later.\"));\r\n  }\r\n};\r\n\r\nconst fetchPlayerStart = (promise) => ({\r\n  type: REQUEST(FETCH_PLAYER),\r\n  payload: promise\r\n});\r\n\r\nconst fetchPlayerSuccess = (data) => ({\r\n  type: SUCCESS(FETCH_PLAYER),\r\n  payload: data,\r\n});\r\n\r\nconst fetchPlayerFailure = (error) => ({\r\n  type: FAILURE(FETCH_PLAYER),\r\n  payload: { error }\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { saveAs } from 'file-saver';\r\nimport { importPlayer, fetchPlayer } from \"../../Redux/Player/playerActions\";\r\n\r\nconst exporterVersion = 0;\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    username: \"\"\r\n  }\r\n\r\n  updateSearchUser = (event) => {\r\n    this.setState({\r\n      username: event.target.value\r\n    });\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.username) {\r\n      this.props.history.push(`/user/${this.state.username}`)\r\n      this.props.getPlayerData(this.state.username);\r\n\r\n      this.setState({\r\n        username: ''\r\n      });\r\n\r\n      if (document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n    }\r\n  }\r\n\r\n  downloadJSON = () => {\r\n    const {\r\n      id,\r\n      username,\r\n      ratings,\r\n      rank,\r\n      registrationDate\r\n    } = this.props.player;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      results\r\n    } = this.props.games;\r\n\r\n    const jsonString = JSON.stringify({\r\n      exporterVersion,\r\n      player: {\r\n        id,\r\n        username,\r\n        ratings,\r\n        rank,\r\n        registrationDate\r\n      },\r\n      games: {\r\n        start,\r\n        end,\r\n        results\r\n      }\r\n    });\r\n\r\n    var blob = new Blob([jsonString], { type: \"text/json;charset=utf-8\" });\r\n    saveAs(blob, `gotstats_${username}.json`);\r\n    window.alert(\"Player data file exported.\\nYou can use it for quick import in the future.\")\r\n  }\r\n\r\n  readFile = (event) => {\r\n    const file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      this.readImportedJSON(evt.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  readImportedJSON = (jsonString) => {\r\n    const data = JSON.parse(jsonString);\r\n    this.props.history.push(`/user/${data.player.username}`)\r\n    this.props.importPlayerData(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <div className=\"form-group\">\r\n          <div className=\"input-group\">\r\n            <input value={this.state.username} onChange={this.updateSearchUser} name=\"id\" type=\"text\" placeholder=\"Username or ID\" className=\"form-control\" />\r\n            <span className=\"input-group-btn\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">Got Stats?</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"text-center\"><small className=\"tip help-block\"><em>-- or --</em></small></p>\r\n\r\n        <div className=\"form-group\">\r\n          <p className=\"d-flex justify-content-between\">\r\n            <input type=\"file\" onChange={this.readFile} id=\"file_input\" style={{ display: 'none' }} />\r\n            <button className=\"btn btn-secondary\" onClick={() => document.getElementById(\"file_input\").click()}>Import Data</button>\r\n            {this.props.games.results.length > 0 && (<button className=\"btn btn-secondary\" onClick={this.downloadJSON}>Export Data</button>)}\r\n          </p>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({ player, games })\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  importPlayerData: data => dispatch(importPlayer(data)),\r\n  getPlayerData: player => dispatch(fetchPlayer(player))\r\n})\r\n\r\nexport default withRouter(connect(mapReduxStateToProps, mapDispatchToProps)(SearchBox));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst links = [\r\n  [\"total_games_stats\", \"Win/Loss ratio\"],\r\n  [\"game_results\", \"Game results distribution\"],\r\n  [\"board_sizes_stats\", \"Performance across board sizes\"],\r\n  [\"time_settings_stats\", \"Performance across time settings\"],\r\n  [\"opponents_stats\", \"Opponents statistics\"],\r\n  [\"misc_stats\", \"Miscellaneous information\"]\r\n]\r\n\r\n\r\nclass QuickLinks extends Component {\r\n  static propTypes = {\r\n    scrollToElem: PropTypes.func.isRequired\r\n  }\r\n\r\n  onLinkClicked = (event, link) => {\r\n    event.preventDefault();\r\n    this.props.scrollToElem(link);\r\n  }\r\n\r\n  renderLink = (linkData, index) => (<li key={index}><a href={`#${linkData[0]}`} onClick={(e) => this.onLinkClicked(e, linkData[0])}>{linkData[1]}</a></li>)\r\n\r\n  render() {\r\n    return (\r\n      <Scrollspy className=\"navi_list\" items={links.map(linkData => linkData[0])} currentClassName=\"active\">\r\n        {links.map(this.renderLink)}\r\n      </Scrollspy>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickLinks;\r\n","import React from \"react\";\r\nimport \"./loading-icon.css\";\r\n\r\nconst LoadingIcon = ({ style }) => {\r\n  const radius = 46; // change css with corresponding circumference\r\n  const strokeWidth = 8;\r\n  const outerRadius = radius + strokeWidth / 2;\r\n  const circumference = Math.PI * (radius * 2);\r\n\r\n  return (\r\n    <svg\r\n      width={outerRadius * 2}\r\n      height={outerRadius * 2}\r\n      viewBox={`0 0 ${outerRadius * 2} ${outerRadius * 2}`}\r\n      transform=\"rotate(-90)\"\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      shapeRendering=\"optimizeQuality\"\r\n      style={style}\r\n    >\r\n      <circle\r\n        r={radius}\r\n        cx={outerRadius}\r\n        cy={outerRadius}\r\n        fill=\"black\"\r\n        className=\"small_loading_icon_bg\"\r\n      />\r\n      <circle\r\n        r={radius}\r\n        cx={outerRadius}\r\n        cy={outerRadius}\r\n        fill=\"transparent\"\r\n        strokeWidth={strokeWidth}\r\n        stroke=\"white\"\r\n        strokeDasharray={circumference}\r\n        className=\"small_loading_icon_ring\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingIcon;\r\n","import React, { Component } from \"react\";\r\n\r\nimport SearchBox from \"./SearchBox\";\r\nimport QuickLinks from \"./QuickLinks\";\r\nimport LoadingIcon from \"../../Shared/Components/LoadingIcon/LoadingIcon\";\r\nimport { connect } from \"react-redux\";\r\nimport { freezeQuery } from \"../../Redux/Games/gameActions\";\r\nimport { minDate } from \"../../Shared/constants\";\r\n\r\nclass SideBar extends Component {\r\n  render() {\r\n    const {\r\n      fetching,\r\n      errorMessage,\r\n      currentPage,\r\n      totalPages,\r\n      showQuickLinks,\r\n      freezeQuery,\r\n      startDate,\r\n    } = this.props;\r\n\r\n    const quickLinks = showQuickLinks ? (\r\n      <div className=\"navi d-none d-md-block\">\r\n        <hr />\r\n        <small className=\"tip help-block\">\r\n          <em>*Mouse over/tap on a chart to see more info.</em>\r\n        </small>\r\n        <QuickLinks scrollToElem={this.props.scrollToElem} />\r\n      </div>\r\n    ) : null;\r\n    const searchBoxOrLoadProgress =\r\n      errorMessage || !(fetching && totalPages > 0) ? (\r\n        <>\r\n          {errorMessage && (\r\n            <div className=\"mb-3 text-danger\">{errorMessage}</div>\r\n          )}\r\n          <SearchBox />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"d-flex align-items-center\">\r\n            <LoadingIcon\r\n              style={{\r\n                width: 32,\r\n                height: 32,\r\n                marginRight: 15,\r\n                flex: \"0 0 auto\",\r\n              }}\r\n            />\r\n            <div>\r\n              Fetching games result from OGS - Page {currentPage + 1}\r\n              {totalPages && ` of ${totalPages}`}\r\n            </div>\r\n          </div>\r\n          {startDate === minDate && (\r\n            <div className=\"mt-3\">\r\n              <button\r\n                className=\"btn btn-block btn-secondary\"\r\n                onClick={freezeQuery}\r\n                title=\"Set filter to current games (stop charts refreshing)\"\r\n              >\r\n                Freeze charts\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n\r\n    return (\r\n      <div className=\"col-lg-3 col-md-4 order-md-2 sidebar\">\r\n        <nav className=\"side_nav sticky-top\">\r\n          {searchBoxOrLoadProgress}\r\n\r\n          {quickLinks}\r\n\r\n          <hr />\r\n          <a\r\n            href=\"https://forums.online-go.com/t/g0tstats-is-back-with-more-stats/6524\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer nofollow\"\r\n          >\r\n            Support thread on OGS forum\r\n          </a>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, player, games }) => ({\r\n  fetching: games.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError,\r\n  showQuickLinks: chartsData.results.length > 0,\r\n  startDate: chartsData.startDate,\r\n});\r\nconst mapDispatchToProps = { freezeQuery };\r\n\r\nexport default connect(mapReduxStateToProps, mapDispatchToProps)(SideBar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./go_loading.css\";\r\n\r\nclass LoadingUser extends Component {\r\n  static propTypes = {\r\n    errorMessage: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    totalPages: PropTypes.number,\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage } = this.props;\r\n\r\n    const loadMessage = `Fetching user info from OGS...`;\r\n\r\n    return (\r\n      <div className=\"loading_wrapper\">\r\n        <svg className=\"loading_icon animating\" width=\"150\" height=\"150\">\r\n          <circle\r\n            className=\"black_stone3\"\r\n            cx=\"71.5\"\r\n            cy=\"28.5\"\r\n            r=\"19.5\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#000000\"\r\n          />\r\n          <circle\r\n            className=\"black_stone2\"\r\n            cx=\"28.5\"\r\n            cy=\"71.5\"\r\n            r=\"19.5\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#000000\"\r\n          />\r\n          <circle\r\n            className=\"black_stone1\"\r\n            cx=\"114.5\"\r\n            cy=\"71.5\"\r\n            r=\"19.5\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#000000\"\r\n          />\r\n          <circle\r\n            className=\"black_stone4\"\r\n            cx=\"71.5\"\r\n            cy=\"114.5\"\r\n            r=\"19.5\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#000000\"\r\n          />\r\n          <circle\r\n            className=\"white_stone\"\r\n            cx=\"71.5\"\r\n            cy=\"71.5\"\r\n            r=\"20\"\r\n            strokeWidth=\"0\"\r\n            fill=\"#f8f8ff\"\r\n          />\r\n        </svg>\r\n        <p className=\"loading_text\">{errorMessage || loadMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  isFetchingPlayer: player.fetching,\r\n  currentPage: games.fetchingPage,\r\n  totalPages: games.fetchingTotalPage,\r\n  errorMessage: player.fetchError || games.fetchError,\r\n});\r\n\r\nexport default connect(mapReduxStateToProps)(LoadingUser);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nclass WinLoseChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    footer: PropTypes.element,\r\n  };\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 60 },\r\n      colors: [\"#000000\", \"#f8f8ff\"],\r\n      pieSliceTextStyle: { color: \"#d93344\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: \"inout\",\r\n        duration: 500,\r\n      },\r\n    },\r\n    subChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#CEEC97\", \"#6369D1\", \"#D8D2E1\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      animation: {\r\n        startup: true,\r\n        easing: \"inout\",\r\n        duration: 500,\r\n      },\r\n    },\r\n  };\r\n\r\n  computeWinLoseStatistics = (games, playerId) => {\r\n    var blackGames = 0,\r\n      whiteGames = 0,\r\n      blackLosses = 0,\r\n      whiteLosses = 0;\r\n    for (let game of games) {\r\n      if (game.players.black.id === playerId) {\r\n        blackGames++;\r\n        if (game.black_lost) {\r\n          blackLosses++;\r\n        }\r\n      } else {\r\n        whiteGames++;\r\n        if (game.white_lost) {\r\n          whiteLosses++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      blackGames,\r\n      blackLosses,\r\n      whiteGames,\r\n      whiteLosses,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n\r\n    const statistics = this.computeWinLoseStatistics(games, player.id);\r\n\r\n    const chartData1 = [\r\n      [\"Color\", \"Games\"],\r\n      [\"Black\", statistics.blackGames],\r\n      [\"White\", statistics.whiteGames],\r\n    ];\r\n    const chartData2 = [\r\n      [\"Result\", \"Games\"],\r\n      [\"Losses\", statistics.blackLosses + statistics.whiteLosses],\r\n      [\r\n        \"Wins\",\r\n        statistics.blackGames +\r\n          statistics.whiteGames -\r\n          (statistics.blackLosses + statistics.whiteLosses),\r\n      ],\r\n    ];\r\n    const chartData3 =\r\n      statistics.blackGames > 0\r\n        ? [\r\n            [\"Result\", \"Games\"],\r\n            [\"Losses\", statistics.blackLosses],\r\n            [\"Wins\", statistics.blackGames - statistics.blackLosses],\r\n          ]\r\n        : null;\r\n    const chartData4 =\r\n      statistics.whiteGames > 0\r\n        ? [\r\n            [\"Result\", \"Games\"],\r\n            [\"Losses\", statistics.whiteLosses],\r\n            [\"Wins\", statistics.whiteGames - statistics.whiteLosses],\r\n          ]\r\n        : null;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <div className=\"row\">\r\n          {chartData1 ? (\r\n            <div className=\"col-sm-6 mr-auto ml-auto\">\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.mainChartOptions}\r\n                data={chartData1}\r\n                width={\"100%\"}\r\n                height={\"400px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {chartData2 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">Total</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.subChartOptions}\r\n                data={chartData2}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData3 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">As Black</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.subChartOptions}\r\n                data={chartData3}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData4 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">As White</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.subChartOptions}\r\n                data={chartData4}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {this.props.footer}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinLoseChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { isPlayerWin } from \"../../Shared/utils\";\r\n\r\nclass ResultDistributionChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  state = {\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10, left: 0, right: 0 },\r\n      colors: [\"#d93344\", \"#CEEC97\", \"#6369D1\", \"#D8D2E1\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#CEEC97\", \"#6369D1\", \"#D8D2E1\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      hAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n      },\r\n      vAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n      },\r\n    },\r\n  };\r\n\r\n  assignGameResultToDistributions = (distributions, game) => {\r\n    const isWin = isPlayerWin(game, distributions.id);\r\n\r\n    if (game.outcome === \"Resignation\") {\r\n      distributions[`${isWin ? \"Plr\" : \"Opp\"}+Res`]++;\r\n    } else if (game.outcome === \"Timeout\") {\r\n      distributions[`${isWin ? \"Plr\" : \"Opp\"}+Time`]++;\r\n    } else if (!isNaN(game.outcome.split(\" \")[0])) {\r\n      const points = parseFloat(game.outcome.split(\" \")[0], 10);\r\n      const pointDiff = Math.floor(points / 10);\r\n\r\n      var result = (pointDiff < 4 ? pointDiff : 4) * 10 + \"+\";\r\n      result = `${isWin ? \"Plr\" : \"Opp\"}+${result}`;\r\n\r\n      distributions[`${isWin ? \"Plr\" : \"Opp\"}+Count`]++;\r\n      distributions[result]++;\r\n    } else {\r\n      distributions[`${isWin ? \"Plr\" : \"Opp\"}+Other`]++;\r\n    }\r\n\r\n    return distributions;\r\n  };\r\n\r\n  computeWinLoseDistributions = (games, playerId) => {\r\n    var distributions = {\r\n      id: playerId,\r\n      \"Opp+Other\": 0,\r\n      \"Opp+Count\": 0,\r\n      \"Opp+Time\": 0,\r\n      \"Opp+Res\": 0,\r\n      \"Opp+40+\": 0,\r\n      \"Opp+30+\": 0,\r\n      \"Opp+20+\": 0,\r\n      \"Opp+10+\": 0,\r\n      \"Opp+0+\": 0,\r\n      \"Plr+0+\": 0,\r\n      \"Plr+10+\": 0,\r\n      \"Plr+20+\": 0,\r\n      \"Plr+30+\": 0,\r\n      \"Plr+40+\": 0,\r\n      \"Plr+Res\": 0,\r\n      \"Plr+Time\": 0,\r\n      \"Plr+Count\": 0,\r\n      \"Plr+Other\": 0,\r\n    };\r\n\r\n    return games.reduce(this.assignGameResultToDistributions, distributions);\r\n  };\r\n\r\n  generateChartData(games, playerId) {\r\n    const distributions = this.computeWinLoseDistributions(games, playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        [\"Result\", \"Games\"],\r\n        [\"Timeout\", distributions[\"Plr+Time\"]],\r\n        [\"Resign\", distributions[\"Plr+Res\"]],\r\n        [\"Scoring\", distributions[\"Plr+Count\"]],\r\n        [\"Other\", distributions[\"Plr+Other\"]],\r\n      ],\r\n      chartData2: [\r\n        [\"Result\", \"Games\"],\r\n        [\"Timeout\", distributions[\"Opp+Time\"]],\r\n        [\"Resign\", distributions[\"Opp+Res\"]],\r\n        [\"Scoring\", distributions[\"Opp+Count\"]],\r\n        [\"Other\", distributions[\"Opp+Other\"]],\r\n      ],\r\n      chartData3: [\r\n        [\"Outcome\", \"Losses\", `Wins`],\r\n        [\"40+\", distributions[\"Opp+40+\"], null],\r\n        [\"30+\", distributions[\"Opp+30+\"], null],\r\n        [\"20+\", distributions[\"Opp+20+\"], null],\r\n        [\"10+\", distributions[\"Opp+10+\"], null],\r\n        [\"0+\", distributions[\"Opp+0+\"], null],\r\n        [\"0+\", null, distributions[\"Plr+0+\"]],\r\n        [\"10+\", null, distributions[\"Plr+10+\"]],\r\n        [\"20+\", null, distributions[\"Plr+20+\"]],\r\n        [\"30+\", null, distributions[\"Plr+30+\"]],\r\n        [\"40+\", null, distributions[\"Plr+40+\"]],\r\n      ],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n\r\n    const { chartData1, chartData2, chartData3 } = this.generateChartData(\r\n      games,\r\n      player.id\r\n    );\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <div className=\"row\">\r\n          {chartData2 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">Losses</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData2}\r\n                width={\"100%\"}\r\n                height={\"300px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData1 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">Wins</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData1}\r\n                width={\"100%\"}\r\n                height={\"300px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"row\">\r\n          {chartData3 ? (\r\n            <div className=\"col-12\">\r\n              <h3 className=\"text-center\">Final scoring distribution</h3>\r\n              <Chart\r\n                chartType=\"ColumnChart\"\r\n                options={this.state.columnChartOptions}\r\n                data={chartData3}\r\n                width={\"100%\"}\r\n                height={\"300px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultDistributionChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { isPlayerWin } from \"../../Shared/utils\";\r\n\r\nclass BoardSizesChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: {\r\n        top: 60,\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n      colors: [\"#d93344\", \"#CEEC97\", \"#6369D1\", \"#D8D2E1\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        alignment: \"center\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#CEEC97\", \"#6369D1\", \"#D8D2E1\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  computeBoardSizes = (games, playerId) => {\r\n    var nineteenGames = 0,\r\n      thirteenGames = 0,\r\n      nineGames = 0,\r\n      otherGames = 0,\r\n      nineteenLosses = 0,\r\n      thirteenLosses = 0,\r\n      nineLosses = 0,\r\n      otherLosses = 0;\r\n\r\n    games.forEach((game) => {\r\n      if (game.width === 19 && game.height === 19) {\r\n        nineteenGames++;\r\n        if (!isPlayerWin(game, playerId)) nineteenLosses++;\r\n      } else if (game.width === 13 && game.height === 13) {\r\n        thirteenGames++;\r\n        if (!isPlayerWin(game, playerId)) thirteenLosses++;\r\n      } else if (game.width === 9 && game.height === 9) {\r\n        nineGames++;\r\n        if (!isPlayerWin(game, playerId)) nineLosses++;\r\n      } else {\r\n        otherGames++;\r\n        if (!isPlayerWin(game, playerId)) otherLosses++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      nineteenGames,\r\n      thirteenGames,\r\n      nineGames,\r\n      otherGames,\r\n      nineteenLosses,\r\n      thirteenLosses,\r\n      nineLosses,\r\n      otherLosses,\r\n    };\r\n  };\r\n\r\n  generateChartData = (games, playerId) => {\r\n    const {\r\n      nineteenGames,\r\n      thirteenGames,\r\n      nineGames,\r\n      otherGames,\r\n      nineteenLosses,\r\n      thirteenLosses,\r\n      nineLosses,\r\n      otherLosses,\r\n    } = this.computeBoardSizes(games, playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        [\"Size\", \"Games\"],\r\n        [\"19x19\", nineteenGames],\r\n        [\"13x13\", thirteenGames],\r\n        [\"9x9\", nineGames],\r\n        [\"Other\", otherGames],\r\n      ],\r\n      chartData2:\r\n        nineteenGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", nineteenLosses],\r\n              [\"Wins\", nineteenGames - nineteenLosses],\r\n            ]\r\n          : null,\r\n      chartData3:\r\n        thirteenGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", thirteenLosses],\r\n              [\"Wins\", thirteenGames - thirteenLosses],\r\n            ]\r\n          : null,\r\n      chartData4:\r\n        nineGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", nineLosses],\r\n              [\"Wins\", nineGames - nineLosses],\r\n            ]\r\n          : null,\r\n      chartData5:\r\n        otherGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", otherLosses],\r\n              [\"Wins\", otherGames - otherLosses],\r\n            ]\r\n          : null,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n      chartData5,\r\n    } = this.generateChartData(games, player.id);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <div className=\"row\">\r\n          {chartData1 ? (\r\n            <div className=\"col-md-6 mr-auto ml-auto\">\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.mainChartOptions}\r\n                data={chartData1}\r\n                width={\"100%\"}\r\n                height={\"400px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {chartData2 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">19x19</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData2}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData3 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">13x13</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData3}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData4 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">9x9</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData4}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData5 ? (\r\n            <div className=\"col-md-6\">\r\n              <h5 className=\"text-center\">Other Sizes</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData5}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardSizesChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nimport { isPlayerWin } from \"../../Shared/utils\";\r\n\r\nclass TimeSettingsChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  state = {\r\n    mainChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: {\r\n        top: 60,\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n      colors: [\"#d93344\", \"#CEEC97\", \"#6369D1\", \"#D8D2E1\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n    pieChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#CEEC97\", \"#6369D1\", \"#D8D2E1\"],\r\n      pieSliceTextStyle: { color: \"#ffffff\" },\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  computeTimeSettings = (games, playerId) => {\r\n    var blitzGames = 0,\r\n      liveGames = 0,\r\n      correspondenceGames = 0,\r\n      blitzLosses = 0,\r\n      liveLosses = 0,\r\n      correspondenceLosses = 0;\r\n    games.forEach((game) => {\r\n      if (game.time_per_move < 20) {\r\n        blitzGames++;\r\n        if (!isPlayerWin(game, playerId)) {\r\n          blitzLosses++;\r\n        }\r\n      } else if (game.time_per_move > 10800) {\r\n        correspondenceGames++;\r\n        if (!isPlayerWin(game, playerId)) {\r\n          correspondenceLosses++;\r\n        }\r\n      } else {\r\n        liveGames++;\r\n        if (!isPlayerWin(game, playerId)) {\r\n          liveLosses++;\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      blitzGames,\r\n      liveGames,\r\n      correspondenceGames,\r\n      blitzLosses,\r\n      liveLosses,\r\n      correspondenceLosses,\r\n    };\r\n  };\r\n\r\n  generateChartData(games, playerId) {\r\n    const times = this.computeTimeSettings(games, playerId);\r\n\r\n    return {\r\n      chartData1: [\r\n        [\"Size\", \"Games\"],\r\n        [\"Blitz\", times.blitzGames],\r\n        [\"Live\", times.liveGames],\r\n        [\"Correspondence\", times.correspondenceGames],\r\n      ],\r\n      chartData2:\r\n        times.blitzGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", times.blitzLosses],\r\n              [\"Wins\", times.blitzGames - times.blitzLosses],\r\n            ]\r\n          : null,\r\n      chartData3:\r\n        times.liveGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", times.liveLosses],\r\n              [\"Wins\", times.liveGames - times.liveLosses],\r\n            ]\r\n          : null,\r\n      chartData4:\r\n        times.correspondenceGames > 0\r\n          ? [\r\n              [\"Result\", \"Games\"],\r\n              [\"Losses\", times.correspondenceLosses],\r\n              [\"Wins\", times.correspondenceGames - times.correspondenceLosses],\r\n            ]\r\n          : null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n    const {\r\n      chartData1,\r\n      chartData2,\r\n      chartData3,\r\n      chartData4,\r\n    } = this.generateChartData(games, player.id);\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <div className=\"row\">\r\n          {chartData1 ? (\r\n            <div className=\"col-sm-6 mr-auto ml-auto\">\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.mainChartOptions}\r\n                data={chartData1}\r\n                width={\"100%\"}\r\n                height={\"400px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        <h3 className=\"text-center\">Win/Loss ratio</h3>\r\n        <div className=\"row\">\r\n          {chartData2 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">Blitz</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData2}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData3 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">Live</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData3}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {chartData4 ? (\r\n            <div className=\"col-md-4\">\r\n              <h5 className=\"text-center\">Correspondence</h5>\r\n              <Chart\r\n                chartType=\"PieChart\"\r\n                options={this.state.pieChartOptions}\r\n                data={chartData4}\r\n                width={\"100%\"}\r\n                height={\"250px\"}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSettingsChart;\r\n","import React from \"react\"\r\n\r\nconst ExtLink = ({ href, title, children }) => (<a href={href} title={title || children} target=\"_blank\" rel=\"noopener noreferrer nofollow\">{children}</a>)\r\n\r\nexport default ExtLink;","import React from 'react';\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nimport { getPlayerRankDisplay } from \"../utils\";\r\nimport { OGS_ROOT, OGS_API_ROOT } from \"../../OGSApi/configs.json\";\r\n\r\nconst PlayerLink = ({ player }) => {\r\n  const href = `${OGS_ROOT}user/view/${player.id}/${player.username}`;\r\n  const img = `${OGS_API_ROOT}${player.id}/icon?size=32`;\r\n  const username = `${player.username} (${getPlayerRankDisplay(player)})`;\r\n\r\n  return (<ExtLink href={href} title={username}><img className=\"img-20\" src={img} alt={username} /> {username}</ExtLink>)\r\n}\r\n\r\nexport default PlayerLink;","import React from 'react';\r\nimport moment from \"moment\";\r\n\r\nimport { OGS_ROOT } from \"../../OGSApi/configs.json\";\r\n\r\nimport ExtLink from \"./ExtLink\";\r\n\r\nconst GameLink = ({ game }) => (<ExtLink href={`${OGS_ROOT}game/${game.related.detail.split(\"games/\")[1]}`}>{moment(game.ended).format(\"MMM D, YYYY\")}</ExtLink>)\r\n\r\nexport default GameLink;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport configs from \"../../OGSApi/configs.json\";\r\nimport {\r\n  isPlayerWin,\r\n  getPlayerRankDisplay,\r\n  getPlayerRank,\r\n  getPlayerRating,\r\n  extractPlayerAndOpponent,\r\n  extractHistoricalPlayerAndOpponent,\r\n} from \"../../Shared/utils\";\r\n\r\nimport PlayerLink from \"../../Shared/Components/PlayerLink\";\r\nimport GameLink from \"../../Shared/Components/GameLink\";\r\n\r\nclass OpponentChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  computeOpponentsInfo = (games, player) => {\r\n    var opponents = {},\r\n      numberOfOpponents = 0;\r\n    var weakestOpp = { rank: 70 };\r\n    var strongestOpp = { rank: 0 };\r\n    var mostPlayed = { games: 0 };\r\n    var strongestDefeated = { ratingDiff: -9999 };\r\n\r\n    for (const game of games) {\r\n      const isWin = isPlayerWin(game, player.id);\r\n\r\n      const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n      const {\r\n        historicalOpponent,\r\n        historicalPlayer,\r\n      } = extractHistoricalPlayerAndOpponent(game, player.id);\r\n      const opponentRank = getPlayerRank(opponent);\r\n\r\n      if (isWin) {\r\n        const ratingDiff =\r\n          getPlayerRating(opponent) -\r\n          getPlayerRating(player) +\r\n          getPlayerRating(historicalOpponent) -\r\n          getPlayerRating(historicalPlayer);\r\n        if (ratingDiff > strongestDefeated.ratingDiff)\r\n          strongestDefeated = {\r\n            ...opponent,\r\n            ratingDiff,\r\n            game,\r\n          };\r\n      }\r\n\r\n      if (!opponents[opponent.id]) {\r\n        opponents[opponent.id] = {\r\n          opponent,\r\n          rank: opponentRank,\r\n          games: 1,\r\n          win: isWin ? 1 : 0,\r\n          loss: isWin ? 0 : 1,\r\n        };\r\n      } else {\r\n        opponents[opponent.id].games++;\r\n        if (isWin) {\r\n          opponents[opponent.id].win++;\r\n        } else {\r\n          opponents[opponent.id].loss++;\r\n        }\r\n      }\r\n\r\n      if (opponentRank > strongestOpp.rank)\r\n        strongestOpp = {\r\n          ...opponent,\r\n          rank: opponentRank,\r\n        };\r\n\r\n      if (opponentRank < weakestOpp.rank)\r\n        weakestOpp = {\r\n          ...opponent,\r\n          rank: opponentRank,\r\n        };\r\n    }\r\n\r\n    const opponentsSortedByGames = Object.values(opponents).sort(\r\n      (a, b) => b.games - a.games\r\n    );\r\n    if (opponentsSortedByGames.length > 0) {\r\n      const mostPlayerOpp = opponentsSortedByGames[0];\r\n      mostPlayed = {\r\n        ...mostPlayerOpp.opponent,\r\n        games: mostPlayerOpp.games,\r\n      };\r\n    }\r\n\r\n    const recurringOpponents = opponentsSortedByGames.filter(\r\n      (o) => o.games > 2\r\n    );\r\n\r\n    numberOfOpponents = Object.keys(opponents).length;\r\n\r\n    return {\r\n      strongestOpp,\r\n      weakestOpp,\r\n      mostPlayed,\r\n      strongestDefeated,\r\n      numberOfOpponents,\r\n      recurringOpponents,\r\n      averageGamePerOpponent: (games.length / numberOfOpponents).toFixed(2),\r\n    };\r\n  };\r\n\r\n  generateChartData(games, player) {\r\n    const opponentsInfo = this.computeOpponentsInfo(games, player);\r\n\r\n    // OGS data allow up to 30k but realistically no one's below 25k on OGS. Subtract 5 so 25k is at leftmost\r\n    const weakestBarRate = Math.max(opponentsInfo.weakestOpp.rank, 0) - 5;\r\n    const strongestBarRate = Math.min(opponentsInfo.strongestOpp.rank, 42) - 5;\r\n    const userBarRate = getPlayerRank(this.props.player) - 5;\r\n\r\n    return {\r\n      numberOfOpponents: opponentsInfo.numberOfOpponents,\r\n      weakestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.weakestOpp.id}/${opponentsInfo.weakestOpp.username}`,\r\n        title: `${opponentsInfo.weakestOpp.username} (${getPlayerRankDisplay(\r\n          opponentsInfo.weakestOpp\r\n        )})`,\r\n        style: { left: `${weakestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.weakestOpp.id}/icon?size=32`,\r\n      },\r\n      userDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${this.props.player.id}/${this.props.player.username}`,\r\n        title: `${this.props.player.username} (${getPlayerRankDisplay(\r\n          this.props.player\r\n        )})`,\r\n        style: { left: `${userBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${this.props.player.id}/icon?size=32`,\r\n      },\r\n      strongestDisp: {\r\n        href: `${configs.OGS_ROOT}user/view/${opponentsInfo.strongestOpp.id}/${opponentsInfo.strongestOpp.username}`,\r\n        title: `${opponentsInfo.strongestOpp.username} (${getPlayerRankDisplay(\r\n          opponentsInfo.strongestOpp\r\n        )})`,\r\n        style: { left: `${strongestBarRate * 3.03030303}%` },\r\n        img: `${configs.OGS_API_ROOT}${opponentsInfo.strongestOpp.id}/icon?size=32`,\r\n      },\r\n      mostPlayedDisp: opponentsInfo.mostPlayed,\r\n      strongestDefeatedDisp: opponentsInfo.strongestDefeated,\r\n      averageGamePerOpponent: opponentsInfo.averageGamePerOpponent,\r\n      recurringOpponents: opponentsInfo.recurringOpponents,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n    const {\r\n      numberOfOpponents,\r\n      weakestDisp,\r\n      userDisp,\r\n      strongestDisp,\r\n      mostPlayedDisp,\r\n      strongestDefeatedDisp,\r\n      averageGamePerOpponent,\r\n      recurringOpponents,\r\n    } = this.generateChartData(games, player);\r\n\r\n    if (!numberOfOpponents) return <section className=\"stats_block\" />;\r\n\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}: {numberOfOpponents}\r\n        </h2>\r\n\r\n        <div className=\"row\">\r\n          <div\r\n            id=\"opponents_polars_chart\"\r\n            className=\"opponent_chart col-8 mr-auto ml-auto\"\r\n          >\r\n            <ul className=\"bar_legend\">\r\n              <li style={weakestDisp.style}>\r\n                <div>Weakest Opponent</div>\r\n                <span></span>\r\n              </li>\r\n              <li style={strongestDisp.style}>\r\n                <div>Strongest Opponent</div>\r\n                <span></span>\r\n              </li>\r\n            </ul>\r\n            <div className=\"bar_chart\">\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={weakestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={weakestDisp.title}\r\n                style={weakestDisp.style}\r\n              >\r\n                <img src={weakestDisp.img} alt={weakestDisp.title} />\r\n              </a>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={userDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={userDisp.title}\r\n                style={userDisp.style}\r\n              >\r\n                <img src={userDisp.img} alt={userDisp.title} />\r\n              </a>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href={strongestDisp.href}\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title={strongestDisp.title}\r\n                style={strongestDisp.style}\r\n              >\r\n                <img src={strongestDisp.img} alt={strongestDisp.title} />\r\n              </a>\r\n            </div>\r\n            <ul className=\"ruler\">\r\n              <li>\r\n                <span></span>\r\n                <div>\r\n                  <small>\r\n                    <em>25k</em>\r\n                  </small>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <span></span>\r\n                <div>\r\n                  <small>\r\n                    <em>10k</em>\r\n                  </small>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <span></span>\r\n                <div>\r\n                  <small>\r\n                    <em>1d</em>\r\n                  </small>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <span></span>\r\n                <div>\r\n                  <small>\r\n                    <em>9d</em>\r\n                  </small>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <ul className=\"info_list\">\r\n              <li>\r\n                Most played with: <PlayerLink player={mostPlayedDisp} /> in{\" \"}\r\n                {mostPlayedDisp.games} games.\r\n              </li>\r\n              {!!strongestDefeatedDisp.username && (\r\n                <li>\r\n                  Strongest defeated opponent:{\" \"}\r\n                  <PlayerLink player={strongestDefeatedDisp} /> on{\" \"}\r\n                  <GameLink game={strongestDefeatedDisp.game} />.\r\n                </li>\r\n              )}\r\n              <li>\r\n                Average game per opponent: {averageGamePerOpponent} games.\r\n              </li>\r\n              {recurringOpponents.length > 0 && (\r\n                <li>\r\n                  Regulars:\r\n                  <div className=\"recurring-opponent-list mt-2\">\r\n                    <div className=\"px-3 py-2\">\r\n                      <strong>Games</strong>\r\n                    </div>\r\n                    <div className=\"px-3 py-2\">\r\n                      <strong>Win Rate</strong>\r\n                    </div>\r\n                    <div className=\"px-3 py-2\">\r\n                      <strong>Opponent</strong>\r\n                    </div>\r\n                    <div className=\"px-3 py-2\">\r\n                      <strong>Wins</strong>\r\n                    </div>\r\n                    <div className=\"px-3 py-2\">\r\n                      <strong>Losses</strong>\r\n                    </div>\r\n                    {recurringOpponents.map((opp, index) => (\r\n                      <>\r\n                        <div\r\n                          className=\"px-3 py-2\"\r\n                          key={opp.opponent.id + \"games\"}\r\n                          style={{\r\n                            background:\r\n                              index % 2 === 0\r\n                                ? \"rgba(0,0,0,0.3)\"\r\n                                : \"transparent\",\r\n                          }}\r\n                        >\r\n                          {opp.games}\r\n                        </div>\r\n                        <div\r\n                          className=\"px-3 py-2 text-right\"\r\n                          key={opp.opponent.id + \"winrate\"}\r\n                          style={{\r\n                            background:\r\n                              index % 2 === 0\r\n                                ? \"rgba(0,0,0,0.3)\"\r\n                                : \"transparent\",\r\n                          }}\r\n                        >\r\n                          {((100 * opp.win) / (opp.win + opp.loss)).toFixed(2)}%\r\n                        </div>\r\n                        <div\r\n                          className=\"px-3 py-2\"\r\n                          key={opp.opponent.id + \"name\"}\r\n                          style={{\r\n                            background:\r\n                              index % 2 === 0\r\n                                ? \"rgba(0,0,0,0.3)\"\r\n                                : \"transparent\",\r\n                          }}\r\n                        >\r\n                          <PlayerLink player={opp.opponent} />\r\n                        </div>\r\n                        <div\r\n                          className=\"px-3 py-2\"\r\n                          key={opp.opponent.id + \"wins\"}\r\n                          style={{\r\n                            background:\r\n                              index % 2 === 0\r\n                                ? \"rgba(0,0,0,0.3)\"\r\n                                : \"transparent\",\r\n                          }}\r\n                        >\r\n                          {opp.win}\r\n                        </div>\r\n                        <div\r\n                          className=\"px-3 py-2\"\r\n                          key={opp.opponent.id + \"losess\"}\r\n                          style={{\r\n                            background:\r\n                              index % 2 === 0\r\n                                ? \"rgba(0,0,0,0.3)\"\r\n                                : \"transparent\",\r\n                          }}\r\n                        >\r\n                          {opp.loss}\r\n                        </div>\r\n                      </>\r\n                    ))}\r\n                  </div>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpponentChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport \"moment-precise-range-plugin\";\r\n\r\nimport {\r\n  isPlayerWin,\r\n  extractPlayerAndOpponent,\r\n  daysDifferenceBetween,\r\n} from \"../../Shared/utils\";\r\n\r\nimport PlayerLink from \"../../Shared/Components/PlayerLink\";\r\nimport GameLink from \"../../Shared/Components/GameLink\";\r\n\r\nclass MiscChart extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    id: PropTypes.string,\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  state = {\r\n    columnChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      isStacked: true,\r\n      chartArea: { top: 10 },\r\n      colors: [\"#d93344\", \"#CEEC97\", \"#6369D1\", \"#D8D2E1\"],\r\n      legend: {\r\n        maxLines: 2,\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      hAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n      },\r\n      vAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n      },\r\n    },\r\n  };\r\n\r\n  computeMiscInfo = (analyzingGames, player) => {\r\n    let mostActiveDay;\r\n    let currentDay = new Date();\r\n    currentDay.setHours(0, 0, 0, 0);\r\n\r\n    let totalLosses = 0;\r\n\r\n    let longestStreak = { streak: 0 };\r\n    let currentStreak = { streak: 0 };\r\n\r\n    let gamesOnMostActiveDay = 0,\r\n      gamesOnCurrentDay = 0;\r\n\r\n    let biggestWin = { diff: 0 };\r\n\r\n    let longestGame = { game: null, duration: 0 };\r\n\r\n    for (let game of analyzingGames) {\r\n      const isWin = isPlayerWin(game, player.id);\r\n\r\n      // Longest streak\r\n      if (isWin) {\r\n        currentStreak.streak++;\r\n        currentStreak.start = game;\r\n\r\n        if (!currentStreak.end) currentStreak.end = game;\r\n\r\n        if (currentStreak.streak > longestStreak.streak)\r\n          longestStreak = currentStreak;\r\n      } else currentStreak = { streak: 0 };\r\n\r\n      // Biggest win\r\n      if (isWin) {\r\n        const { opponent } = extractPlayerAndOpponent(game, player.id);\r\n        if (!isNaN(game.outcome.split(\" \")[0])) {\r\n          const scoreDiff = parseFloat(game.outcome.split(\" \")[0]);\r\n          if (scoreDiff > biggestWin.diff) {\r\n            biggestWin = {\r\n              game: game,\r\n              opponent: opponent,\r\n              diff: scoreDiff,\r\n            };\r\n          }\r\n        }\r\n      }\r\n      // Total losses\r\n      else totalLosses++;\r\n\r\n      // Most active day\r\n      let gameDay = new Date(game.ended);\r\n      gameDay.setHours(0, 0, 0, 0);\r\n      if (daysDifferenceBetween(currentDay, gameDay) !== 0) {\r\n        currentDay = gameDay;\r\n        gamesOnCurrentDay = 1;\r\n      } else {\r\n        gamesOnCurrentDay++;\r\n      }\r\n\r\n      if (gamesOnCurrentDay > gamesOnMostActiveDay) {\r\n        mostActiveDay = currentDay;\r\n        gamesOnMostActiveDay = gamesOnCurrentDay;\r\n      }\r\n\r\n      // Game duration\r\n      if (game.ended && game.started) {\r\n        const gameDuration = moment\r\n          .duration(moment(game.ended).diff(moment(game.started)))\r\n          .asMilliseconds();\r\n        if (gameDuration > longestGame.duration) {\r\n          longestGame = {\r\n            game,\r\n            duration: gameDuration,\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    let memberSince = new Date(player.registrationDate);\r\n    // Change memberSince to date of first game for player who migrated from old server\r\n    if (analyzingGames.length) {\r\n      let firstGameDate = new Date(\r\n        analyzingGames[analyzingGames.length - 1].started\r\n      );\r\n      if (firstGameDate < memberSince) memberSince = firstGameDate;\r\n    }\r\n\r\n    let gamesPerDay = 0;\r\n    if (analyzingGames.length) {\r\n      let dateOfFirstGame = new Date(\r\n        analyzingGames[analyzingGames.length - 1].started\r\n      );\r\n      let daysSinceStart = daysDifferenceBetween(new Date(), dateOfFirstGame);\r\n      gamesPerDay = analyzingGames.length / parseFloat(daysSinceStart);\r\n    }\r\n\r\n    const uniqueTournaments = analyzingGames\r\n      .filter((game) => game.tournament !== null)\r\n      .reduce((result, game) => {\r\n        if (result.indexOf(game.tournament) === -1) {\r\n          result.push(game.tournament);\r\n        }\r\n\r\n        return result;\r\n      }, []).length;\r\n\r\n    return {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin,\r\n      uniqueTournaments,\r\n      totalLosses,\r\n      longestGame: longestGame.game,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { games, player } = this.props;\r\n    const {\r\n      memberSince,\r\n      gamesPerDay,\r\n      longestStreak,\r\n      mostActiveDay,\r\n      gamesOnMostActiveDay,\r\n      biggestWin,\r\n      totalLosses,\r\n      uniqueTournaments,\r\n      longestGame,\r\n    } = this.computeMiscInfo(games, player);\r\n\r\n    const streakDurationDisplay = longestStreak.end ? (\r\n      <span>\r\n        , from <GameLink game={longestStreak.start} /> to{\" \"}\r\n        <GameLink game={longestStreak.end} />\r\n      </span>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    const biggestWinDisplay = biggestWin.game && (\r\n      <li>\r\n        Biggest win: {biggestWin.diff} points victory against{\" \"}\r\n        <PlayerLink player={biggestWin.opponent} /> on{\" \"}\r\n        <GameLink game={biggestWin.game} />.\r\n      </li>\r\n    );\r\n    return (\r\n      <section className=\"stats_block\">\r\n        <h2 id={this.props.id} className=\"text-center\">\r\n          {this.props.title}\r\n        </h2>\r\n        <ul className=\"info_list\">\r\n          <li>Member since: {moment(memberSince).format(\"DD MMM, YYYY\")}.</li>\r\n          <li>Plays {gamesPerDay.toFixed(3)} games per day on average.</li>\r\n          <li>\r\n            Most active day: {moment(mostActiveDay).format(\"DD MMM, YYYY\")} with{\" \"}\r\n            {gamesOnMostActiveDay} finished games.\r\n          </li>\r\n          <li>Played in {uniqueTournaments} tournaments.</li>\r\n          <li>\r\n            Longest win streak: {longestStreak.streak} wins in a row\r\n            {streakDurationDisplay}.\r\n          </li>\r\n          {biggestWinDisplay}\r\n          {longestGame && (\r\n            <li>\r\n              Longest game: <GameLink game={longestGame} /> lasting{\" \"}\r\n              {moment.preciseDiff(longestGame.ended, longestGame.started)}\r\n            </li>\r\n          )}\r\n          {totalLosses >= 50 && (\r\n            <li>\r\n              Congratulations,{\" \"}\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer nofollow\"\r\n                href=\"http://senseis.xmp.net/?page=LoseYourFirst50GamesAsQuicklyAsPossible\"\r\n              >\r\n                you have lost your first 50 games\r\n              </a>\r\n              !\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiscChart;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/material_red.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Collapse, Button } from \"reactstrap\";\r\n\r\nimport {\r\n  applyGameFilters,\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues,\r\n  resultTypeValues,\r\n} from \"../../Redux/Charts/chartActions\";\r\n\r\nconst minDate = new Date(\"Jan 1 2008\").getTime();\r\nconst maxDate = new Date();\r\n\r\nclass ChartFilter extends PureComponent {\r\n  static propTypes = {\r\n    startDate: PropTypes.object.isRequired,\r\n    endDate: PropTypes.object.isRequired,\r\n    limitEndDate: PropTypes.bool.isRequired,\r\n    ranked: PropTypes.array.isRequired,\r\n    tournament: PropTypes.array.isRequired,\r\n    boardSize: PropTypes.array.isRequired,\r\n    timeSettings: PropTypes.array.isRequired,\r\n    handicap: PropTypes.array.isRequired,\r\n    color: PropTypes.array.isRequired,\r\n    resultType: PropTypes.array.isRequired,\r\n    filterGames: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    expanded: false,\r\n  };\r\n\r\n  onCheckboxChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = Array.from(document.querySelectorAll(`input[name='${name}']`))\r\n      .filter((input) => input.checked)\r\n      .map((input) => input.value);\r\n    this.onFilterChanged({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onToggleChanged = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.checked;\r\n    this.onFilterChanged({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onDateChanged = (name, dates) => {\r\n    const date = dates[0];\r\n    this.onFilterChanged({ [name]: date });\r\n  };\r\n\r\n  onFilterChanged = (changes) => {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      startDate,\r\n      endDate,\r\n      resultType\r\n    } = this.props;\r\n\r\n    this.props.filterGames({\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      resultType,\r\n      endDate,\r\n      startDate,\r\n      ...changes,\r\n    });\r\n  };\r\n\r\n  renderCheckBoxItems = (validValues, values, name, subDivideCols = false) =>\r\n    subDivideCols ? (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        <div className=\"row\">\r\n          {validValues.map((state, index) => (\r\n            <div className=\"col-5\" key={index}>\r\n              {this.renderCheckbox(values, name, state, index)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"form-group col-sm-6 col-lg-4\">\r\n        {validValues.map((state, index) =>\r\n          this.renderCheckbox(values, name, state, index)\r\n        )}\r\n      </div>\r\n    );\r\n  renderCheckbox = (values, name, state, index) => (\r\n    <div className=\"form-check\" key={index}>\r\n      <input\r\n        name={name}\r\n        className=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        id={`${name}_${index}`}\r\n        value={state}\r\n        defaultChecked={values.includes(state)}\r\n        onChange={this.onCheckboxChanged}\r\n      />\r\n      <label className=\"form-check-label\" htmlFor={`${name}_${index}`}>\r\n        {state}\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const {\r\n      ranked,\r\n      tournament,\r\n      boardSize,\r\n      timeSettings,\r\n      handicap,\r\n      color,\r\n      resultType\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          color=\"secondary\"\r\n          className=\"mb-3\"\r\n          onClick={() => this.setState({ expanded: !this.state.expanded })}\r\n        >\r\n          Filters {this.state.expanded ? \"-\" : \"+\"}\r\n        </Button>\r\n        <Collapse isOpen={this.state.expanded}>\r\n          <form onSubmit={(e) => e.preventDefault()} className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-sm-6 col-lg-4\">\r\n                  <label>Analyze games starting from</label>\r\n                  <Flatpickr\r\n                    value={this.props.startDate || \"\"}\r\n                    className=\"form-control flatpickr-input\"\r\n                    name=\"startDate\"\r\n                    onChange={(dates) => this.onDateChanged(\"startDate\", dates)}\r\n                    options={{\r\n                      dateFormat: \"M d, Y\",\r\n                      minDate: this.props.minDate,\r\n                      maxDate: this.props.maxDate,\r\n                      enableTime: false,\r\n                      enableSeconds: false,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-sm-6 col-lg-4\">\r\n                  <label className=\"form-check\">\r\n                    <input\r\n                      name=\"limitEndDate\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      id=\"limit_endDate\"\r\n                      value=\"limitEndDate\"\r\n                      defaultChecked={this.props.limitEndDate}\r\n                      onChange={this.onToggleChanged}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"limit_endDate\"\r\n                    >{`limit end date${\r\n                      this.props.limitEndDate ? \" to\" : \"\"\r\n                    }`}</label>\r\n                  </label>\r\n                  {this.props.limitEndDate && (\r\n                    <Flatpickr\r\n                      value={this.props.endDate || \"\"}\r\n                      className=\"form-control flatpickr-input\"\r\n                      name=\"endDate\"\r\n                      onChange={(dates) => this.onDateChanged(\"endDate\", dates)}\r\n                      options={{\r\n                        dateFormat: \"M d, Y\",\r\n                        minDate: this.props.minDate,\r\n                        maxDate: this.props.maxDate,\r\n                        enableTime: false,\r\n                        enableSeconds: false,\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {this.renderCheckBoxItems(rankedValues.values, ranked, \"ranked\")}\r\n            {this.renderCheckBoxItems(\r\n              boardSizeValues.values,\r\n              boardSize,\r\n              \"boardSize\",\r\n              true\r\n            )}\r\n            {this.renderCheckBoxItems(\r\n              timeSettingsValues.values,\r\n              timeSettings,\r\n              \"timeSettings\"\r\n            )}\r\n            {this.renderCheckBoxItems(\r\n              handicapValues.values,\r\n              handicap,\r\n              \"handicap\"\r\n            )}\r\n            {this.renderCheckBoxItems(colorValues.values, color, \"color\")}\r\n            {this.renderCheckBoxItems(resultTypeValues.values, resultType, \"resultType\")}\r\n            {this.renderCheckBoxItems(\r\n              tournamentValues.values,\r\n              tournament,\r\n              \"tournament\"\r\n            )}\r\n          </form>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games }) => ({\r\n  ...chartsData,\r\n  minDate: games.start || minDate,\r\n  maxDate: games.end || maxDate,\r\n});\r\nconst maxDispatchToProps = (dispatch) => ({\r\n  filterGames: (filters) => dispatch(applyGameFilters(filters)),\r\n});\r\n\r\nexport default connect(mapReduxStateToProps, maxDispatchToProps)(ChartFilter);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nimport configs from \"../../OGSApi/configs.json\";\r\nimport {\r\n  ratingToKyuDan,\r\n  getPlayerRating,\r\n  isPlayerWin,\r\n  extractHistoricalPlayerAndOpponent,\r\n} from \"../../Shared/utils\";\r\n\r\nimport moment from \"moment\";\r\n\r\nclass GameHistoryChart extends Component {\r\n  static propTypes = {\r\n    games: PropTypes.array.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    insertCurrentRank: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  state = {\r\n    scatterPlotChartOptions: {\r\n      backgroundColor: \"transparent\",\r\n      chartArea: { top: 50, left: 50, right: 5 },\r\n      colors: [\"#6369D1\", \"#d93344\", \"#CEEC97\", \"#D8D2E1\"],\r\n      legend: {\r\n        position: \"bottom\",\r\n        textStyle: {\r\n          color: \"#f8f8ff\",\r\n          fontName: \"Roboto\",\r\n          fontSize: 14,\r\n        },\r\n      },\r\n      series: [\r\n        { type: \"line\" },\r\n        { type: \"scatter\", pointShape: { type: \"triangle\", rotation: 180 } },\r\n        { type: \"scatter\", pointShape: { type: \"triangle\" } },\r\n      ],\r\n      hAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n        gridlines: {\r\n          color: \"transparent\",\r\n        },\r\n        format: \"MMM ''yy\",\r\n      },\r\n      vAxis: {\r\n        textStyle: { color: \"#f8f8ff\", fontName: \"Roboto\", fontSize: 11 },\r\n        gridlines: { count: 0 },\r\n      },\r\n      tooltip: {\r\n        isHtml: true,\r\n        trigger: \"selection\",\r\n      },\r\n    },\r\n  };\r\n\r\n  computeGameHistory = (games, player, insertCurrentRank) => {\r\n    let historicalWinloss = [];\r\n\r\n    if (insertCurrentRank || games.length < 2) {\r\n      historicalWinloss.push({\r\n        date: new Date(),\r\n        playerRating: getPlayerRating(player),\r\n      });\r\n    }\r\n\r\n    for (const game of games) {\r\n      const isWin = isPlayerWin(game, player.id);\r\n      const {\r\n        historicalPlayer,\r\n        historicalOpponent,\r\n      } = extractHistoricalPlayerAndOpponent(game, player.id);\r\n      historicalWinloss.push({\r\n        isBlack: game.players.black.id === player.id,\r\n        isWin,\r\n        date: new Date(game.ended),\r\n        playerRating: getPlayerRating(historicalPlayer),\r\n        opponentRating: getPlayerRating(historicalOpponent),\r\n        gameId: game.id,\r\n      });\r\n    }\r\n    return historicalWinloss;\r\n  };\r\n\r\n  renderChartTooltip = ({\r\n    isBlack,\r\n    isWin,\r\n    date,\r\n    playerRating,\r\n    opponentRating,\r\n    gameId,\r\n  }) =>\r\n    opponentRating\r\n      ? `<h6><a class=\"${isWin ? \"text-green\" : \"text-red\"}\" href=\"${\r\n          configs.OGS_ROOT\r\n        }game/${gameId}\" target=\"blank\" rel=\"noopener noreferrer nofollow\">${moment(\r\n          date\r\n        ).format(\"MMM D, YYYY HH:mm\")} - ${isWin ? \"Win\" : \"Loss\"}</a></h6>\r\n      <div><i class=\"fas fa-circle\" style=\"${\r\n        isBlack ? \"color: #000000;\" : \"color: #ffffff;\"\r\n      }\"></i> Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(\r\n          playerRating\r\n        )})</div>\r\n      <div><i class=\"fas fa-circle\" style=\"${\r\n        isBlack ? \"color: #ffffff;\" : \"color: #000000;\"\r\n      }\"></i> Opponent rating: ${Math.round(opponentRating)} (${ratingToKyuDan(\r\n          opponentRating\r\n        )})</div>`\r\n      : `<h6>Currently</h6>\r\n      <div>Player rating: ${Math.round(playerRating)} (${ratingToKyuDan(\r\n          playerRating\r\n        )})</div>`;\r\n\r\n  render() {\r\n    const { games, player, insertCurrentRank } = this.props;\r\n\r\n    const historicalWinloss = this.computeGameHistory(\r\n      games,\r\n      player,\r\n      insertCurrentRank\r\n    );\r\n\r\n    const chartData = [\r\n      [\r\n        \"Date\",\r\n        { type: \"number\", label: \"Player Rating\" },\r\n        { type: \"string\", role: \"tooltip\", p: { html: true } },\r\n        { type: \"number\", label: \"Opponent Rating (Loss)\" },\r\n        { type: \"string\", role: \"tooltip\", p: { html: true } },\r\n        { type: \"number\", label: \"Opponent Rating (Win)\" },\r\n        { type: \"string\", role: \"tooltip\", p: { html: true } },\r\n      ],\r\n      ...historicalWinloss.map((item) => [\r\n        item.date,\r\n        item.playerRating,\r\n        this.renderChartTooltip(item),\r\n        item.isWin ? null : item.opponentRating,\r\n        this.renderChartTooltip(item),\r\n        item.isWin ? item.opponentRating : null,\r\n        this.renderChartTooltip(item),\r\n      ]),\r\n    ];\r\n\r\n    return (\r\n      <Chart\r\n        chartType=\"ComboChart\"\r\n        data={chartData}\r\n        options={this.state.scatterPlotChartOptions}\r\n        width={\"100%\"}\r\n        height={\"400px\"}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameHistoryChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport WinLoseChart from \"./WinLoseChart\";\r\nimport ResultDistributionChart from \"./ResultDistributionChart\";\r\nimport BoardSizesChart from \"./BoardSizesChart\";\r\nimport TimeSettingsChart from \"./TimeSettingsChart\";\r\nimport OpponentChart from \"./OpponentChart\";\r\nimport MiscChart from \"./MiscChart\";\r\nimport ChartFilter from \"../GameFilters/ChartFilter\";\r\nimport GameHistoryChart from \"./GameHistoryChart\";\r\n\r\nclass ChartList extends Component {\r\n  static propTypes = {\r\n    games: PropTypes.object.isRequired,\r\n    chartsData: PropTypes.object.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { player, chartsData, games } = this.props;\r\n\r\n    const filteredGamesData = chartsData.results;\r\n    const allGamesData = games.results;\r\n\r\n    return (\r\n      <div>\r\n        <ChartFilter />\r\n\r\n        <hr />\r\n        <h2 id=\"total_games_stats\" className=\"text-center\">\r\n          {`${filteredGamesData.length} of ${allGamesData.length} games match the filters`}\r\n        </h2>\r\n\r\n        {filteredGamesData.length > 0 && (\r\n          <div>\r\n            <GameHistoryChart\r\n              games={filteredGamesData}\r\n              player={player}\r\n              insertCurrentRank={!chartsData.limitEndDate}\r\n            />\r\n\r\n            <WinLoseChart games={filteredGamesData} player={player} />\r\n\r\n            <ResultDistributionChart\r\n              title={`Game results distribution`}\r\n              id={\"game_results\"}\r\n              games={filteredGamesData}\r\n              player={player}\r\n            />\r\n            {chartsData.boardSize.length > 1 && (\r\n              <BoardSizesChart\r\n                title={`Performance across board sizes`}\r\n                id={\"board_sizes_stats\"}\r\n                games={filteredGamesData}\r\n                player={player}\r\n              />\r\n            )}\r\n            {chartsData.timeSettings.length > 1 && (\r\n              <TimeSettingsChart\r\n                title={`Performance across time settings`}\r\n                id={\"time_settings_stats\"}\r\n                games={filteredGamesData}\r\n                player={player}\r\n              />\r\n            )}\r\n            <OpponentChart\r\n              title={`Unique opponents faced`}\r\n              id={\"opponents_stats\"}\r\n              games={filteredGamesData}\r\n              player={player}\r\n            />\r\n            <MiscChart\r\n              title={`Miscellaneous`}\r\n              id={\"misc_stats\"}\r\n              games={filteredGamesData}\r\n              player={player}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapReduxStateToProps = ({ chartsData, games, player }) => ({\r\n  chartsData,\r\n  games,\r\n  player,\r\n});\r\n\r\nexport default connect(mapReduxStateToProps)(ChartList);\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-8\">\r\n          <p><em>\"Got Stats?\" analytics tool for <a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://www.online-go.com\">OGS</a> by Chinitsu (aka AVAVT).</em></p>\r\n          <p><em>The source code is also available on <a href=\"https://github.com/AVAVT/gotstats\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Github</a>.</em></p>\r\n        </div>\r\n        <div className=\"col-sm-4 text-right\">\r\n          <a href=\"http://avavt.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">About the author</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport Header from \"./Header/Header\";\r\nimport Welcome from \"./Welcome\";\r\nimport SideBar from \"./SideBar/SideBar\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchPlayer } from \"../Redux/Player/playerActions\";\r\nimport LoadingUser from \"./LoadingUser/LoadingUser\";\r\nimport ChartList from \"./Charts/ChartList\";\r\nimport Footer from \"./Footer/Footer\";\r\n\r\nclass Statistics extends Component {\r\n  static propTypes = {\r\n    getPlayerData: PropTypes.func.isRequired,\r\n    player: PropTypes.object.isRequired,\r\n    user: PropTypes.string,\r\n    showLoading: PropTypes.bool.isRequired,\r\n    showStatistics: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  scrollToElem(id) {\r\n    document.getElementById(id).scrollIntoView();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.props.getPlayerData(this.props.user);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"App\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <SideBar scrollToElem={this.scrollToElem} />\r\n            <div className=\"col-lg-9 order-md-1 col-md-8 content-wrapper\">\r\n              {this.props.showStatistics ? (\r\n                <ChartList />\r\n              ) : this.props.showLoading ? (\r\n                <LoadingUser />\r\n              ) : (\r\n                <Welcome />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapReduxStateToProps = ({ player, games }) => ({\r\n  player,\r\n  showLoading:\r\n    !!player.fetching ||\r\n    !!player.fetchError ||\r\n    !!games.fetching ||\r\n    !!games.fetchError,\r\n  showStatistics: player.id > -1 && games.results.length > 0,\r\n});\r\n\r\nconst mapReduxDispatchToProps = (dispatch) => ({\r\n  getPlayerData: (player) => dispatch(fetchPlayer(player)),\r\n});\r\n\r\nexport default connect(\r\n  mapReduxStateToProps,\r\n  mapReduxDispatchToProps\r\n)(Statistics);\r\n","import React from 'react';\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\nimport Statistics from './WebApp/Statistics';\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nconst App = ({ reduxStore }) => (\r\n  <ReduxProvider store={reduxStore}>\r\n    <Router>\r\n      <Route path=\"/user/:user\" component={({ match }) => (<Statistics user={match.params.user} />)} />\r\n      <Route exact path=\"/\" component={Statistics} />\r\n    </Router>\r\n  </ReduxProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { FETCH_PLAYER } from './playerActions';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from '../promiseUtils';\r\n\r\nconst initialState = {\r\n  id: -1,\r\n  username: \"\",\r\n  ratings: {\r\n    overall: {\r\n      rating: 0\r\n    }\r\n  },\r\n  rank: 0,\r\n  fetching: null,\r\n  fetchError: \"\",\r\n  registrationDate: null\r\n}\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case REQUEST(FETCH_PLAYER): return {\r\n      ...initialState,\r\n      fetching: payload,\r\n      fetchError: \"\"\r\n    }\r\n\r\n    case SUCCESS(FETCH_PLAYER): return {\r\n      ...state,\r\n      fetching: null,\r\n      ...payload\r\n    }\r\n\r\n    case FAILURE(FETCH_PLAYER): return {\r\n      ...state,\r\n      fetching: null,\r\n      fetchError: payload.error\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { FETCH_GAMES } from \"./gameActions\";\r\n\r\nimport { REQUEST, SUCCESS, FAILURE, PROGRESS } from \"../promiseUtils\";\r\n\r\nimport { FETCH_PLAYER } from \"../Player/playerActions\";\r\n\r\nimport { minDate, maxDate } from \"../../Shared/constants\";\r\n\r\nconst initialState = {\r\n  results: [],\r\n  fetching: null,\r\n  fetchingPage: 0,\r\n  fetchingTotalPage: 0,\r\n  fetchError: \"\",\r\n  start: minDate,\r\n  end: maxDate,\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case REQUEST(FETCH_PLAYER):\r\n      return {\r\n        ...initialState,\r\n        fetching: state.fetching,\r\n      };\r\n\r\n    case REQUEST(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        fetching: payload,\r\n        fetchingPage: 0,\r\n        fetchingTotalPage: 0,\r\n        fetchError: \"\",\r\n        results: [],\r\n        start: minDate,\r\n        end: maxDate,\r\n      };\r\n\r\n    case PROGRESS(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n\r\n    case SUCCESS(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        fetching: null,\r\n        ...payload,\r\n      };\r\n\r\n    case FAILURE(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        fetching: null,\r\n        fetchError: payload.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { resultTypeValues, UPDATE_CHART_DATA_SOURCE } from \"./chartActions\";\r\nimport { FETCH_GAMES } from \"../Games/gameActions\";\r\nimport { FETCH_PLAYER } from \"../Player/playerActions\";\r\n\r\nimport { REQUEST, SUCCESS } from \"../promiseUtils\";\r\n\r\nimport {\r\n  rankedValues,\r\n  tournamentValues,\r\n  boardSizeValues,\r\n  timeSettingsValues,\r\n  colorValues,\r\n  handicapValues,\r\n} from \"./chartActions\";\r\n\r\nimport { minDate, maxDate } from \"../../Shared/constants\";\r\n\r\nconst initialState = {\r\n  startDate: minDate,\r\n  endDate: maxDate,\r\n  ranked: rankedValues.values,\r\n  tournament: tournamentValues.values,\r\n  boardSize: boardSizeValues.values,\r\n  timeSettings: timeSettingsValues.values,\r\n  handicap: handicapValues.values,\r\n  color: colorValues.values,\r\n  resultType: resultTypeValues.values,\r\n  limitEndDate: false,\r\n  results: [],\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case UPDATE_CHART_DATA_SOURCE:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n\r\n    case REQUEST(FETCH_GAMES):\r\n    case REQUEST(FETCH_PLAYER):\r\n      return {\r\n        ...initialState,\r\n      };\r\n\r\n    case SUCCESS(FETCH_GAMES):\r\n      return {\r\n        ...state,\r\n        startDate: payload.start,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\nimport configs from './configs.json';\r\nimport CancelablePromise from 'cancelable-promise';\r\n\r\nconst OGSApi = {\r\n  fetchUserId: (user) => {\r\n    return new CancelablePromise((resolve, reject) => {\r\n      if (isNaN(user)) { // Entered username\r\n        axios.get(`${configs.OGS_API_ROOT}?username=${user}`)\r\n          .then(res => res.data)\r\n          .then(function (data) {\r\n            if (data.results.length > 0) {\r\n              resolve(data.results[0].id);\r\n            }\r\n            else {\r\n              reject(\"Error: user not found. Are you sure you entered the correct username? If it still doesn't work, try using userID instead.\");\r\n            }\r\n          })\r\n          .catch(function (err) {\r\n            reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n          });\r\n      }\r\n      else {  // Entered user id\r\n        resolve(user);\r\n      }\r\n    });\r\n  },\r\n\r\n  fetchUserDataById: (id) => {\r\n    return new CancelablePromise((resolve, reject) => {\r\n      axios.get(`${configs.OGS_API_ROOT}${id}`)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          resolve(data);\r\n        })\r\n        .catch(function (err) {\r\n          reject(`Error connecting to OGS server. Error code: ${err.status}. Please try again later or contact me if you really have the need to stalk that person.`);\r\n        });\r\n    });\r\n  },\r\n\r\n  fetchGamePage: (playerId, url) => {\r\n    if (url === undefined) url = `${configs.OGS_API_ROOT}${playerId}/games/?ended__isnull=false&annulled=false&ordering=-ended&page_size=50`;\r\n\r\n    return new CancelablePromise((resolve, reject) => {\r\n      axios.get(url)\r\n        .then(res => res.data)\r\n        .then(function (data) {\r\n          resolve(data);\r\n        })\r\n        .catch(function (err) {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport default OGSApi;","import OGSApi from '../OGSApi/OGSApi';\r\n\r\nexport const OVERRIDE_API = \"OVERRIDE_API\";\r\n\r\nconst reducer = (state = OGSApi, { type, payload }) => type === OVERRIDE_API ? payload : state;\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport playerReducer from \"./Player/playerReducer\";\r\nimport gamesReducer from \"./Games/gameReducer\";\r\nimport chartReducers from \"./Charts/chartDataReducer\";\r\nimport APIReducer from \"./APIReducer\";\r\n\r\nexport default combineReducers({\r\n  OGSApi: APIReducer,\r\n  player: playerReducer,\r\n  games: gamesReducer,\r\n  chartsData: chartReducers\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createReduxStore } from \"./Redux/store\";\r\n\r\nconst reduxStore = createReduxStore();\r\n\r\nReactDOM.render(\r\n  <App reduxStore={reduxStore} />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nexport const createReduxStore = () => {\r\n  return createStore(\r\n    reducers,\r\n    composeWithReduxDevTools(\r\n      applyMiddleware(reduxThunk)\r\n    )\r\n  );\r\n}"],"sourceRoot":""}